<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>杰克飞的博客 • Posts by &#34;集合&#34; category</title>
        <link>http://example.com</link>
        <description>一个用Hexo搭建的个人博客</description>
        <language>zh-CN</language>
        <pubDate>Sat, 19 Jul 2025 16:28:05 +0800</pubDate>
        <lastBuildDate>Sat, 19 Jul 2025 16:28:05 +0800</lastBuildDate>
        <category>HashMap</category>
        <category>实现原理</category>
        <category>线程安全</category>
        <category>put方法</category>
        <category>HashSet</category>
        <category>HashTable</category>
        <category>ArrayList</category>
        <category>扩容</category>
        <category>Hexo</category>
        <category>博客</category>
        <item>
            <guid isPermalink="true">http://example.com/2025/07/19/%E8%AE%B2%E4%B8%80%E8%AE%B2HashMap%E7%9A%84%E6%89%A9%E5%AE%B9%E6%9C%BA%E5%88%B6/</guid>
            <title>讲一讲HashMap的扩容机制</title>
            <link>http://example.com/2025/07/19/%E8%AE%B2%E4%B8%80%E8%AE%B2HashMap%E7%9A%84%E6%89%A9%E5%AE%B9%E6%9C%BA%E5%88%B6/</link>
            <category>HashMap</category>
            <category>扩容</category>
            <pubDate>Sat, 19 Jul 2025 16:28:05 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;摘要：&lt;br&gt;HashMap 在元素个数超过阈值时会触发扩容（resize）操作，这个阈值是数组容量 * 负载因子。扩容的过程包括新数组创建和元素迁移。&lt;/p&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;

&lt;p&gt;正文：&lt;br&gt;当哈希表中元素个数超过阈值时会触发扩容 resize 方法，这个阈值是 数组容量 * 负载因子，数组容量初始是16，负载因子默认是0.75。&lt;/p&gt;
&lt;p&gt;扩容时：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;创建一个新数组&lt;/strong&gt;，容量为旧数组的2倍，具体是将旧容量左移1位得到新容量。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;迁移元素&lt;/strong&gt;，遍历旧数组的每个槽位，重新计算索引后放到新数组。如果槽位是单个节点，通过 &lt;code&gt;e.hash &amp;amp; (newCap新容量 - 1)&lt;/code&gt; 计算新索引；如果是红黑树节点，拆分处理。如果是链表节点，将链表拆分为&lt;strong&gt;低位链&lt;/strong&gt;和&lt;strong&gt;高位链&lt;/strong&gt;，避免重新哈希带来性能损耗。如果 &lt;code&gt;e.hash &amp;amp; oldCap == 0&lt;/code&gt;（元素哈希值与上旧容量等于0）就是低位链，索引不变。如果不为0，就是高位链，索引变成 旧索引 + 旧容量。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;通过这种方式，HashMap 能够高效地完成扩容和数据迁移，保证查询和插入的性能。&lt;/p&gt;
 ]]></description>
        </item>
    </channel>
</rss>
