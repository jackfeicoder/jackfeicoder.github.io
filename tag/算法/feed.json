{
    "version": "https://jsonfeed.org/version/1",
    "title": "杰克飞的博客 • All posts by \"算法\" tag",
    "description": "一个用Hexo搭建的个人博客",
    "home_page_url": "https://120115.xyz",
    "items": [
        {
            "id": "https://120115.xyz/2025/08/01/leetcodeHot100%E5%88%B7%E9%A2%98%E6%96%B9%E5%BC%8F_%E7%AE%80%E6%B4%81%E7%89%88/",
            "url": "https://120115.xyz/2025/08/01/leetcodeHot100%E5%88%B7%E9%A2%98%E6%96%B9%E5%BC%8F_%E7%AE%80%E6%B4%81%E7%89%88/",
            "title": "力扣算法Hot100刷题路线",
            "date_published": "2025-08-01T03:08:46.565Z",
            "content_html": "<h1 id=\"力扣算法Hot100刷题路线\"><a href=\"#力扣算法Hot100刷题路线\" class=\"headerlink\" title=\"力扣算法Hot100刷题路线\"></a>力扣算法Hot100刷题路线</h1><h2 id=\"介绍\"><a href=\"#介绍\" class=\"headerlink\" title=\"介绍\"></a>介绍</h2><p>对于算法题，按题型类别刷题才会更有成效，因此我这里在网上搜索并参考了下 <strong>🔥 LeetCode 热题 HOT 100</strong> 的题型归类，并在其基础上做了一定的完善，希望能够记录自己的刷题历程，有所收获！</p>\n<h3 id=\"参考文章\"><a href=\"#参考文章\" class=\"headerlink\" title=\"参考文章\"></a>参考文章</h3><ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM3MTAyOTg0L2FydGljbGUvZGV0YWlscy8xMjg1NzYyODM=\">【热题】LeetCode 热题 HOT 100分类+题解</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM3MTAyOTg0L2FydGljbGUvZGV0YWlscy8xMjg1NzYyODM=\">leetcode HOT100总结</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM3MTAyOTg0L2FydGljbGUvZGV0YWlscy8xMjg1NzYyODM=\">leetcode算法总结 —— HOT 100分类整理</span></li>\n</ul>\n<h3 id=\"刷题说明\"><a href=\"#刷题说明\" class=\"headerlink\" title=\"刷题说明\"></a>刷题说明</h3><ul>\n<li>我这里只做了LeetCode 热题 HOT 100中的 <strong>easy</strong> 和 <strong>middle</strong> 的题，<strong>hard</strong> 的题难度较大暂时都跳过了（题目上都有 <del>删除线</del> 标识），大部分面试也不会考察，后面有精力再做研究。</li>\n<li>题目后带有 <strong>★</strong> 标识的表示后续还要继续反复练习，题目可能不难，但有时可能会忽略其中的一些刷题细节而导致错误</li>\n<li>每一种类型的题目，并不绝对是按照题号递增的顺序来排列的（当然大部分都是按题号大小排好序的）。</li>\n<li>因为有些题目其实很相似，放在一起更好，便单独对他们做了调整，比如 <a href=\"#647-%E5%9B%9E%E6%96%87%E5%AD%90%E4%B8%B2\">647. 回文子串</a> 和 <a href=\"#5-%E6%9C%80%E9%95%BF%E5%9B%9E%E6%96%87%E5%AD%90%E4%B8%B2\">5. 最长回文子串</a></li>\n<li>这里面的每一道题，都有相对应我自己日常整理的题解，具体可参考：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM3MTAyOTg0L2FydGljbGUvZGV0YWlscy8xMjg1NzYyODM=\">我的博客-LeetCode专栏题解</span>，在里面搜对应题号即可 ~</li>\n<li>大家在浏览时，可以通过下方⬇️按题型分类汇总后的【目录】来实现快速跳转，更方便、更快捷的刷题。</li>\n<li>同时这篇文章我也是我花费了很长的时间，对比多篇文章来总结和编写的，希望对大家有所帮助。</li>\n</ul>\n<h2 id=\"文章目录\"><a href=\"#文章目录\" class=\"headerlink\" title=\"文章目录\"></a>文章目录</h2><h3 id=\"一、链表（共11题）\"><a href=\"#一、链表（共11题）\" class=\"headerlink\" title=\"一、链表（共11题）\"></a>一、链表（共11题）</h3><ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9hZGQtdHdvLW51bWJlcnMvZGVzY3JpcHRpb24v\">2. 两数相加</span> <strong>★</strong></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9yZW1vdmUtbnRoLW5vZGUtZnJvbS1lbmQtb2YtbGlzdC9kZXNjcmlwdGlvbi8=\">19. 删除链表的倒数第 N 个结点</span> <strong>★</strong></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9tZXJnZS10d28tc29ydGVkLWxpc3RzLz9mYXZvcml0ZT0yY2t0a3Zq\">21. 合并两个有序链表</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9tZXJnZS1rLXNvcnRlZC1saXN0cy9kZXNjcmlwdGlvbi8/ZmF2b3JpdGU9MmNrdGt2ag==\">23. 合并K个升序链表</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9saW5rZWQtbGlzdC1jeWNsZS8/ZmF2b3JpdGU9MmNrdGt2ag==\">141. 环形链表</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9saW5rZWQtbGlzdC1jeWNsZS1paS9kZXNjcmlwdGlvbi8/ZmF2b3JpdGU9MmNrdGt2ag==\">142. 环形链表 II</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9zb3J0LWxpc3QvZGVzY3JpcHRpb24v\">148. 排序链表</span> <strong>★</strong></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9pbnRlcnNlY3Rpb24tb2YtdHdvLWxpbmtlZC1saXN0cy8/ZmF2b3JpdGU9MmNrdGt2ag==\">160. 相交链表</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9yZXZlcnNlLWxpbmtlZC1saXN0L2Rlc2NyaXB0aW9uLw==\">206. 反转链表</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9wYWxpbmRyb21lLWxpbmtlZC1saXN0L2Rlc2NyaXB0aW9uLw==\">234. 回文链表</span> <strong>★</strong></li>\n<li><del><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9xdWV1ZS1yZWNvbnN0cnVjdGlvbi1ieS1oZWlnaHQvP2Zhdm9yaXRlPTJja3Rrdmo=\">406. 根据身高重建队列</span></del>（middle题，暂时跳过）</li>\n</ul>\n<h3 id=\"二、二叉树（共14题，含2道hard题）\"><a href=\"#二、二叉树（共14题，含2道hard题）\" class=\"headerlink\" title=\"二、二叉树（共14题，含2道hard题）\"></a>二、二叉树（共14题，含2道hard题）</h3><p><strong>做题心得：</strong></p>\n<ul>\n<li><p>处理递归，核心就是千万不要想子问题的过程，你脑子能处理几层？马上就绕迷糊了。要想子问题的结果，思路就清晰了</p>\n</li>\n<li><p>是的，只要代码的边界条件和非边界条件的逻辑写对了，其他的事情交给数学归纳法就好了。也就是说，写对了这两个逻辑，你的代码自动就是正确的了，没必要想递归是怎么一层一层走的。</p>\n</li>\n<li><p>跟树相关的题，一般有两种解法：递归&amp;迭代：递归用dfs，而迭代用bfs（队列）</p>\n</li>\n<li><p>Go 语言的深度优先遍历算法可以采用闭包函数实现，这样省去了许多参数的传递与全局变量的声明。</p>\n</li>\n<li><p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9iaW5hcnktdHJlZS1pbm9yZGVyLXRyYXZlcnNhbC8/ZmF2b3JpdGU9MmNrdGt2ag==\">94. 二叉树的中序遍历</span></p>\n</li>\n<li><p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy92YWxpZGF0ZS1iaW5hcnktc2VhcmNoLXRyZWUvP2Zhdm9yaXRlPTJja3Rrdmo=\">98. 验证二叉搜索树</span> <strong>★★★</strong></p>\n</li>\n<li><p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9zeW1tZXRyaWMtdHJlZS9kZXNjcmlwdGlvbi8=\">101. 对称二叉树</span></p>\n</li>\n<li><p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9iaW5hcnktdHJlZS1sZXZlbC1vcmRlci10cmF2ZXJzYWwvZGVzY3JpcHRpb24vP2Zhdm9yaXRlPTJja3Rrdmo=\">102. 二叉树的层序遍历</span></p>\n</li>\n<li><p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9tYXhpbXVtLWRlcHRoLW9mLWJpbmFyeS10cmVlL2Rlc2NyaXB0aW9uLw==\">104. 二叉树的最大深度</span> <strong>★</strong></p>\n</li>\n<li><p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9jb25zdHJ1Y3QtYmluYXJ5LXRyZWUtZnJvbS1wcmVvcmRlci1hbmQtaW5vcmRlci10cmF2ZXJzYWwvZGVzY3JpcHRpb24v\">105. 从前序与中序遍历序列构造二叉树</span> <strong>★★★</strong></p>\n</li>\n<li><p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9mbGF0dGVuLWJpbmFyeS10cmVlLXRvLWxpbmtlZC1saXN0Lz9mYXZvcml0ZT0yY2t0a3Zq\">114. 二叉树展开为链表</span> <strong>★★★</strong></p>\n</li>\n<li><p><del><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9iaW5hcnktdHJlZS1tYXhpbXVtLXBhdGgtc3VtL2Rlc2NyaXB0aW9uLz9mYXZvcml0ZT0yY2t0a3Zq\">124. 二叉树中的最大路径和</span></del>（hard题，暂时跳过）</p>\n</li>\n<li><p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9pbnZlcnQtYmluYXJ5LXRyZWUvZGVzY3JpcHRpb24vP2Zhdm9yaXRlPTJja3Rrdmo=\">226. 翻转二叉树</span></p>\n</li>\n<li><p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9sb3dlc3QtY29tbW9uLWFuY2VzdG9yLW9mLWEtYmluYXJ5LXRyZWUvZGVzY3JpcHRpb24v\">236. 二叉树的最近公共祖先</span> <strong>★</strong></p>\n</li>\n<li><p><del><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9zZXJpYWxpemUtYW5kLWRlc2VyaWFsaXplLWJpbmFyeS10cmVlLz9mYXZvcml0ZT0yY2t0a3Zq\">297. 二叉树的序列化与反序列化</span></del>（hard题，暂时跳过）</p>\n</li>\n<li><p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9jb252ZXJ0LWJzdC10by1ncmVhdGVyLXRyZWUvZGVzY3JpcHRpb24v\">538. 把二叉搜索树转换为累加树</span> <strong>★</strong></p>\n</li>\n<li><p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9kaWFtZXRlci1vZi1iaW5hcnktdHJlZS9kZXNjcmlwdGlvbi8=\">543. 二叉树的直径</span> <strong>★</strong></p>\n</li>\n<li><p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9tZXJnZS10d28tYmluYXJ5LXRyZWVzLz9mYXZvcml0ZT0yY2t0a3Zq\">617. 合并二叉树</span></p>\n</li>\n</ul>\n<p><strong>新版 hot100 题目扩充（以下题目列表不断更新ing~）：</strong></p>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9jb252ZXJ0LXNvcnRlZC1hcnJheS10by1iaW5hcnktc2VhcmNoLXRyZWUvZGVzY3JpcHRpb24v\">LeetCode 108. 将有序数组转换为二叉搜索树</span></li>\n</ul>\n<h3 id=\"三、DFS-BFS（共6题，含3道hard题）\"><a href=\"#三、DFS-BFS（共6题，含3道hard题）\" class=\"headerlink\" title=\"三、DFS&#x2F;BFS（共6题，含3道hard题）\"></a>三、DFS&#x2F;BFS（共6题，含3道hard题）</h3><ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy93b3JkLXNlYXJjaC9kZXNjcmlwdGlvbi8=\">79. 单词搜索</span> <strong>★</strong></li>\n<li><del><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9tYXhpbWFsLXJlY3RhbmdsZS8/ZmF2b3JpdGU9MmNrdGt2ag==\">85. 最大矩形</span></del> （hard题，暂时跳过）</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9udW1iZXItb2YtaXNsYW5kcy9kZXNjcmlwdGlvbi8=\">200. 岛屿数量</span></li>\n<li><del><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9jb3Vyc2Utc2NoZWR1bGUvP2Zhdm9yaXRlPTJja3Rrdmo=\">207. 课程表</span></del> （hard题，暂时跳过）</li>\n<li><del><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9yZW1vdmUtaW52YWxpZC1wYXJlbnRoZXNlcy9kZXNjcmlwdGlvbi8/ZmF2b3JpdGU9MmNrdGt2ag==\">301. 删除无效的括号</span></del> （hard题，暂时跳过）</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9wYXRoLXN1bS1paWkvc29sdXRpb25zLw==\">437. 路径总和 III</span> <strong>★</strong></li>\n</ul>\n<h3 id=\"四、递归-回溯（共6题，含1道hard题）\"><a href=\"#四、递归-回溯（共6题，含1道hard题）\" class=\"headerlink\" title=\"四、递归&#x2F;回溯（共6题，含1道hard题）\"></a>四、递归&#x2F;回溯（共6题，含1道hard题）</h3><ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9sZXR0ZXItY29tYmluYXRpb25zLW9mLWEtcGhvbmUtbnVtYmVyL2Rlc2NyaXB0aW9uLw==\">17. 电话号码的字母组合</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9nZW5lcmF0ZS1wYXJlbnRoZXNlcy9kZXNjcmlwdGlvbi8=\">22. 括号生成</span> <strong>★</strong></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9jb21iaW5hdGlvbi1zdW0vZGVzY3JpcHRpb24v\">39. 组合总和</span> <strong>★</strong></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9wZXJtdXRhdGlvbnMvP2Zhdm9yaXRlPTJja3Rrdmo=\">46. 全排列</span> <strong>★</strong></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9zdWJzZXRzL2Rlc2NyaXB0aW9uLw==\">78. 子集</span> <strong>★</strong></li>\n<li><del><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9ldmFsdWF0ZS1kaXZpc2lvbi9kZXNjcmlwdGlvbi8/ZmF2b3JpdGU9MmNrdGt2ag==\">399. 除法求值</span></del> （hard题，暂时跳过）</li>\n</ul>\n<h3 id=\"五、Hash表-map（共3题）\"><a href=\"#五、Hash表-map（共3题）\" class=\"headerlink\" title=\"五、Hash表&#x2F;map（共3题）\"></a>五、Hash表&#x2F;map（共3题）</h3><ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy90d28tc3VtL2Rlc2NyaXB0aW9uLw==\">1. 两数之和</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9ncm91cC1hbmFncmFtcy9kZXNjcmlwdGlvbi8=\">49. 字母异位词分组</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9sb25nZXN0LWNvbnNlY3V0aXZlLXNlcXVlbmNlL2Rlc2NyaXB0aW9uLz9mYXZvcml0ZT0yY2t0a3Zq\">128. 最长连续序列</span></li>\n</ul>\n<h3 id=\"六、位运算（共3题）\"><a href=\"#六、位运算（共3题）\" class=\"headerlink\" title=\"六、位运算（共3题）\"></a>六、位运算（共3题）</h3><ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9zaW5nbGUtbnVtYmVyL2Rlc2NyaXB0aW9uLw==\">136. 只出现一次的数字</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9jb3VudGluZy1iaXRzL2Rlc2NyaXB0aW9uLw==\">338. 比特位计数</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9oYW1taW5nLWRpc3RhbmNlL2Rlc2NyaXB0aW9uLw==\">461. 汉明距离</span></li>\n</ul>\n<h3 id=\"七、数组（共5题）\"><a href=\"#七、数组（共5题）\" class=\"headerlink\" title=\"七、数组（共5题）\"></a>七、数组（共5题）</h3><ul>\n<li><del><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy8zc3VtL2Rlc2NyaXB0aW9uLz9mYXZvcml0ZT0yY2t0a3Zq\">15. 三数之和</span></del> 待研究</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9uZXh0LXBlcm11dGF0aW9uL2Rlc2NyaXB0aW9uLw==\">31. 下一个排列</span> <strong>★★★</strong></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9tYWpvcml0eS1lbGVtZW50L2Rlc2NyaXB0aW9uLw==\">169. 多数元素</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9wcm9kdWN0LW9mLWFycmF5LWV4Y2VwdC1zZWxmL2Rlc2NyaXB0aW9uLw==\">238. 除自身以外数组的乘积</span> <strong>★</strong></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9maW5kLWFsbC1udW1iZXJzLWRpc2FwcGVhcmVkLWluLWFuLWFycmF5L2Rlc2NyaXB0aW9uLw==\">448. 找到所有数组中消失的数字</span> <strong>★</strong></li>\n</ul>\n<h3 id=\"八、二分查找（共5题，含1道hard题）\"><a href=\"#八、二分查找（共5题，含1道hard题）\" class=\"headerlink\" title=\"八、二分查找（共5题，含1道hard题）\"></a>八、二分查找（共5题，含1道hard题）</h3><ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9tZWRpYW4tb2YtdHdvLXNvcnRlZC1hcnJheXMvZGVzY3JpcHRpb24v\">4. 寻找两个正序数组的中位数</span> （hard题）</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9zZWFyY2gtaW4tcm90YXRlZC1zb3J0ZWQtYXJyYXkvZGVzY3JpcHRpb24v\">33. 搜索旋转排序数组</span> <strong>★</strong></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9maW5kLWZpcnN0LWFuZC1sYXN0LXBvc2l0aW9uLW9mLWVsZW1lbnQtaW4tc29ydGVkLWFycmF5L2Rlc2NyaXB0aW9uLw==\">34. 在排序数组中查找元素的第一个和最后一个位置</span> <strong>★★</strong></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9zZWFyY2gtYS0yZC1tYXRyaXgtaWkvZGVzY3JpcHRpb24vP2Zhdm9yaXRlPTJja3Rrdmo=\">240. 搜索二维矩阵 II</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9maW5kLXRoZS1kdXBsaWNhdGUtbnVtYmVyL2Rlc2NyaXB0aW9uLw==\">287. 寻找重复数</span> <strong>★★</strong></li>\n</ul>\n<p><strong>新版 hot100 题目扩充（以下题目列表不断更新ing~）：</strong></p>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9zZWFyY2gtaW5zZXJ0LXBvc2l0aW9uL2Rlc2NyaXB0aW9uLw==\">LeetCode 35. 搜索插入位置</span></li>\n</ul>\n<h3 id=\"九、双指针-三指针（共3题）\"><a href=\"#九、双指针-三指针（共3题）\" class=\"headerlink\" title=\"九、双指针&#x2F;三指针（共3题）\"></a>九、双指针&#x2F;三指针（共3题）</h3><ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9jb250YWluZXItd2l0aC1tb3N0LXdhdGVyL2Rlc2NyaXB0aW9uLw==\">11. 盛最多水的容器</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9zb3J0LWNvbG9ycy9kZXNjcmlwdGlvbi8=\">75. 颜色分类</span> <strong>★★</strong></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9tb3ZlLXplcm9lcy9kZXNjcmlwdGlvbi8=\">283. 移动零</span> <strong>★</strong></li>\n</ul>\n<h3 id=\"十、栈-单调栈（共6题，含2道hard题）\"><a href=\"#十、栈-单调栈（共6题，含2道hard题）\" class=\"headerlink\" title=\"十、栈&#x2F;单调栈（共6题，含2道hard题）\"></a>十、栈&#x2F;单调栈（共6题，含2道hard题）</h3><ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy92YWxpZC1wYXJlbnRoZXNlcy9kZXNjcmlwdGlvbi8=\">20. 有效的括号</span></li>\n<li><del><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy90cmFwcGluZy1yYWluLXdhdGVyLz9mYXZvcml0ZT0yY2t0a3Zq\">42. 接雨水</span></del> （hard题，暂时跳过）</li>\n<li><del><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9sYXJnZXN0LXJlY3RhbmdsZS1pbi1oaXN0b2dyYW0vP2Zhdm9yaXRlPTJja3Rrdmo=\">84. 柱状图中最大的矩形</span></del> （hard题，暂时跳过）</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9taW4tc3RhY2svZGVzY3JpcHRpb24v\">155. 最小栈</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9kZWNvZGUtc3RyaW5nL2Rlc2NyaXB0aW9uLw==\">394. 字符串解码</span> <strong>★★</strong></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9kYWlseS10ZW1wZXJhdHVyZXMvZGVzY3JpcHRpb24v\">739. 每日温度</span> <strong>★</strong></li>\n</ul>\n<h3 id=\"十一、排序（共4题）\"><a href=\"#十一、排序（共4题）\" class=\"headerlink\" title=\"十一、排序（共4题）\"></a>十一、排序（共4题）</h3><ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9tZXJnZS1pbnRlcnZhbHMvZGVzY3JpcHRpb24vP2Zhdm9yaXRlPTJja3Rrdmo=\">56. 合并区间</span> <strong>★</strong></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9rdGgtbGFyZ2VzdC1lbGVtZW50LWluLWFuLWFycmF5L2Rlc2NyaXB0aW9uLw==\">215. 数组中的第K个最大元素</span> <strong>★★★</strong></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy90b3Atay1mcmVxdWVudC1lbGVtZW50cy9kZXNjcmlwdGlvbi8=\">347. 前 K 个高频元素</span> <strong>★</strong></li>\n<li><del><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9zaG9ydGVzdC11bnNvcnRlZC1jb250aW51b3VzLXN1YmFycmF5L2Rlc2NyaXB0aW9uLz9mYXZvcml0ZT0yY2t0a3Zq\">581. 最短无序连续子数组</span></del>（middle题，暂时跳过）</li>\n</ul>\n<h3 id=\"十二、前缀和（共1题）\"><a href=\"#十二、前缀和（共1题）\" class=\"headerlink\" title=\"十二、前缀和（共1题）\"></a>十二、前缀和（共1题）</h3><ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9zdWJhcnJheS1zdW0tZXF1YWxzLWsvZGVzY3JpcHRpb24v\">560. 和为 K 的子数组</span></li>\n</ul>\n<h3 id=\"十三、字典树-前缀树（共1题）\"><a href=\"#十三、字典树-前缀树（共1题）\" class=\"headerlink\" title=\"十三、字典树&#x2F;前缀树（共1题）\"></a>十三、字典树&#x2F;前缀树（共1题）</h3><ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9pbXBsZW1lbnQtdHJpZS1wcmVmaXgtdHJlZS9kZXNjcmlwdGlvbi8=\">208. 实现 Trie (前缀树)</span> <strong>★★★</strong></li>\n</ul>\n<h3 id=\"十四、LRU缓存（共1题）\"><a href=\"#十四、LRU缓存（共1题）\" class=\"headerlink\" title=\"十四、LRU缓存（共1题）\"></a>十四、LRU缓存（共1题）</h3><ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9scnUtY2FjaGUvP2Zhdm9yaXRlPTJja3Rrdmo=\">146. LRU 缓存</span> <strong>★★★</strong></li>\n</ul>\n<h3 id=\"十五、动态规划（共23题，含6道hard题）\"><a href=\"#十五、动态规划（共23题，含6道hard题）\" class=\"headerlink\" title=\"十五、动态规划（共23题，含6道hard题）\"></a>十五、动态规划（共23题，含6道hard题）</h3><ul>\n<li><del><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9yZWd1bGFyLWV4cHJlc3Npb24tbWF0Y2hpbmcvZGVzY3JpcHRpb24vP2Zhdm9yaXRlPTJja3Rrdmo=\">10. 正则表达式匹配</span></del>（hard题，暂时跳过）</li>\n<li><del><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9sb25nZXN0LXZhbGlkLXBhcmVudGhlc2VzL2Rlc2NyaXB0aW9uLz9mYXZvcml0ZT0yY2t0a3Zq\">32. 最长有效括号</span></del>（hard题，暂时跳过）</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9tYXhpbXVtLXN1YmFycmF5L2Rlc2NyaXB0aW9uLw==\">53. 最大子数组和</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy91bmlxdWUtcGF0aHMvZGVzY3JpcHRpb24v\">62. 不同路径</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9taW5pbXVtLXBhdGgtc3VtLz9mYXZvcml0ZT0yY2t0a3Zq\">64. 最小路径和</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9jbGltYmluZy1zdGFpcnMvZGVzY3JpcHRpb24v\">70. 爬楼梯</span></li>\n<li><del><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9lZGl0LWRpc3RhbmNlLz9mYXZvcml0ZT0yY2t0a3Zq\">72. 编辑距离</span></del>（hard题，暂时跳过）</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy91bmlxdWUtYmluYXJ5LXNlYXJjaC10cmVlcy9kZXNjcmlwdGlvbi8=\">96. 不同的二叉搜索树</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9iZXN0LXRpbWUtdG8tYnV5LWFuZC1zZWxsLXN0b2NrL2Rlc2NyaXB0aW9uLw==\">121. 买卖股票的最佳时机</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy93b3JkLWJyZWFrLz9mYXZvcml0ZT0yY2t0a3Zq\">139. 单词拆分</span> <strong>★</strong></li>\n<li><del><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9tYXhpbXVtLXByb2R1Y3Qtc3ViYXJyYXkvZGVzY3JpcHRpb24vP2Zhdm9yaXRlPTJja3Rrdmo=\">152. 乘积最大子数组</span></del>（middle题，暂时跳过）</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9ob3VzZS1yb2JiZXIvZGVzY3JpcHRpb24v\">198. 打家劫舍</span></li>\n<li><del><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9ob3VzZS1yb2JiZXItaWlpL2Rlc2NyaXB0aW9uLz9mYXZvcml0ZT0yY2t0a3Zq\">337. 打家劫舍 III</span></del>（middle题，暂时跳过）</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9tYXhpbWFsLXNxdWFyZS9kZXNjcmlwdGlvbi8=\">221. 最大正方形</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9wZXJmZWN0LXNxdWFyZXMvZGVzY3JpcHRpb24v\">279. 完全平方数</span> <strong>★</strong></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9sb25nZXN0LWluY3JlYXNpbmctc3Vic2VxdWVuY2UvZGVzY3JpcHRpb24v\">300. 最长递增子序列</span> <strong>★</strong></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9iZXN0LXRpbWUtdG8tYnV5LWFuZC1zZWxsLXN0b2NrLXdpdGgtY29vbGRvd24vP2Zhdm9yaXRlPTJja3Rrdmo=\">309. 最佳买卖股票时机含冷冻期</span> <strong>★★★</strong></li>\n<li><del><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9idXJzdC1iYWxsb29ucy8/ZmF2b3JpdGU9MmNrdGt2ag==\">312. 戳气球</span></del>（hard题，暂时跳过）</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9jb2luLWNoYW5nZS9kZXNjcmlwdGlvbi8=\">322. 零钱兑换</span> <strong>★</strong></li>\n<li><del><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9wYXJ0aXRpb24tZXF1YWwtc3Vic2V0LXN1bS8/ZmF2b3JpdGU9MmNrdGt2ag==\">416. 分割等和子集</span></del>（middle题，暂时跳过）</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy90YXJnZXQtc3VtL2Rlc2NyaXB0aW9uLw==\">494. 目标和</span> <strong>★</strong></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9wYWxpbmRyb21pYy1zdWJzdHJpbmdzL2Rlc2NyaXB0aW9uLz9mYXZvcml0ZT0yY2t0a3Zq\">647. 回文子串</span> <strong>★★</strong></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9sb25nZXN0LXBhbGluZHJvbWljLXN1YnN0cmluZy9kZXNjcmlwdGlvbi8=\">5. 最长回文子串</span></li>\n</ul>\n<h3 id=\"十六、滑动窗口（共4题，含2道hard题）\"><a href=\"#十六、滑动窗口（共4题，含2道hard题）\" class=\"headerlink\" title=\"十六、滑动窗口（共4题，含2道hard题）\"></a>十六、滑动窗口（共4题，含2道hard题）</h3><ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9sb25nZXN0LXN1YnN0cmluZy13aXRob3V0LXJlcGVhdGluZy1jaGFyYWN0ZXJzL2Rlc2NyaXB0aW9uLw==\">3. 无重复字符的最长子串</span> <strong>★★★</strong></li>\n<li><del><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9taW5pbXVtLXdpbmRvdy1zdWJzdHJpbmcvZGVzY3JpcHRpb24vP2Zhdm9yaXRlPTJja3Rrdmo=\">76. 最小覆盖子串</span></del>（hard题，暂时跳过）</li>\n<li><del><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9zbGlkaW5nLXdpbmRvdy1tYXhpbXVtLz9mYXZvcml0ZT0yY2t0a3Zq\">239. 滑动窗口最大值</span></del>（hard题，暂时跳过）</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9maW5kLWFsbC1hbmFncmFtcy1pbi1hLXN0cmluZy9kZXNjcmlwdGlvbi8/ZmF2b3JpdGU9MmNrdGt2ag==\">438. 找到字符串中所有字母异位词</span> <strong>★</strong></li>\n</ul>\n<h3 id=\"十七、贪心（共1题）\"><a href=\"#十七、贪心（共1题）\" class=\"headerlink\" title=\"十七、贪心（共1题）\"></a>十七、贪心（共1题）</h3><ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9qdW1wLWdhbWUvZGVzY3JpcHRpb24v\">55. 跳跃游戏</span></li>\n</ul>\n<h3 id=\"十八、数学（共1题）\"><a href=\"#十八、数学（共1题）\" class=\"headerlink\" title=\"十八、数学（共1题）\"></a>十八、数学（共1题）</h3><ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9yb3RhdGUtaW1hZ2Uvc29sdXRpb25zLz9mYXZvcml0ZT0yY2t0a3Zq\">48. 旋转图像</span> <strong>★</strong></li>\n</ul>\n<h3 id=\"十九、其它（共2题，含1道力扣VIP专属题）\"><a href=\"#十九、其它（共2题，含1道力扣VIP专属题）\" class=\"headerlink\" title=\"十九、其它（共2题，含1道力扣VIP专属题）\"></a>十九、其它（共2题，含1道力扣VIP专属题）</h3><ul>\n<li><del><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9tZWV0aW5nLXJvb21zLWlpLz9mYXZvcml0ZT0yY2t0a3Zq\">253. 会议室 II</span></del>（力扣VIP专属题，暂时跳过）</li>\n<li><del><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy90YXNrLXNjaGVkdWxlci9zb2x1dGlvbnMvP2Zhdm9yaXRlPTJja3Rrdmo=\">621. 任务调度器</span></del>（middle题，暂时跳过）</li>\n</ul>\n<h2 id=\"以下middle题目我暂时跳过了，后面有精力再研究：\"><a href=\"#以下middle题目我暂时跳过了，后面有精力再研究：\" class=\"headerlink\" title=\"以下middle题目我暂时跳过了，后面有精力再研究：\"></a>以下middle题目我暂时跳过了，后面有精力再研究：</h2><ul>\n<li><ol start=\"406\">\n<li>根据身高重建队列</li>\n</ol>\n</li>\n<li><ol start=\"152\">\n<li>乘积最大子数组</li>\n</ol>\n</li>\n<li><ol start=\"416\">\n<li>分割等和子集</li>\n</ol>\n</li>\n<li><ol start=\"337\">\n<li>打家劫舍 III</li>\n</ol>\n</li>\n<li><ol start=\"581\">\n<li>最短无序连续子数组</li>\n</ol>\n</li>\n<li><ol start=\"253\">\n<li>会议室 II</li>\n</ol>\n</li>\n<li><ol start=\"621\">\n<li>任务调度器</li>\n</ol>\n</li>\n</ul>\n<h2 id=\"常见高频题：\"><a href=\"#常见高频题：\" class=\"headerlink\" title=\"常见高频题：\"></a>常见高频题：</h2><ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9tZXJnZS1zb3J0ZWQtYXJyYXkvZGVzY3JpcHRpb24v\">88. 合并两个有序数组</span>，倒序双指针，类似于 <a href=\"#21-%E5%90%88%E5%B9%B6%E4%B8%A4%E4%B8%AA%E6%9C%89%E5%BA%8F%E9%93%BE%E8%A1%A8\">21. 合并两个有序链表</a></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9jb21wcmVzcy1zdHJpbmctbGNjaS9kZXNjcmlwdGlvbi8=\">面试题 01.06. 字符串压缩</span>，类似于 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9zdHJpbmctY29tcHJlc3Npb24vZGVzY3JpcHRpb24v\">443. 压缩字符串</span></li>\n</ul>\n<hr>\n<p><strong>版权声明：</strong> 本文为博主原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接和本声明。</p>\n<p><strong>原文链接：</strong> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM3MTAyOTg0L2FydGljbGUvZGV0YWlscy8xMjg1NzYyODM=\">https://blog.csdn.net/qq_37102984/article/details/128576283</span> </p>\n",
            "tags": [
                "算法",
                "力扣",
                "LeetCode",
                "刷题"
            ]
        },
        {
            "id": "https://120115.xyz/2025/08/01/leetcodeHot100%E5%88%B7%E9%A2%98%E6%96%B9%E5%BC%8F_%E6%95%B4%E7%90%86%E7%89%88/",
            "url": "https://120115.xyz/2025/08/01/leetcodeHot100%E5%88%B7%E9%A2%98%E6%96%B9%E5%BC%8F_%E6%95%B4%E7%90%86%E7%89%88/",
            "title": "力扣算法Hot100刷题路线",
            "date_published": "2025-08-01T02:49:40.465Z",
            "content_html": "<h1 id=\"力扣算法Hot100刷题路线\"><a href=\"#力扣算法Hot100刷题路线\" class=\"headerlink\" title=\"力扣算法Hot100刷题路线\"></a>力扣算法Hot100刷题路线</h1><h2 id=\"介绍\"><a href=\"#介绍\" class=\"headerlink\" title=\"介绍\"></a>介绍</h2><p>对于算法题，按题型类别刷题才会更有成效，因此我这里在网上搜索并参考了下 <strong>🔥 LeetCode 热题 HOT 100</strong> 的题型归类，并在其基础上做了一定的完善，希望能够记录自己的刷题历程，有所收获！</p>\n<h3 id=\"参考文章\"><a href=\"#参考文章\" class=\"headerlink\" title=\"参考文章\"></a>参考文章</h3><ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM3MTAyOTg0L2FydGljbGUvZGV0YWlscy8xMjg1NzYyODM=\">【热题】LeetCode 热题 HOT 100分类+题解</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM3MTAyOTg0L2FydGljbGUvZGV0YWlscy8xMjg1NzYyODM=\">leetcode HOT100总结</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM3MTAyOTg0L2FydGljbGUvZGV0YWlscy8xMjg1NzYyODM=\">leetcode算法总结 —— HOT 100分类整理</span></li>\n</ul>\n<h3 id=\"刷题说明\"><a href=\"#刷题说明\" class=\"headerlink\" title=\"刷题说明\"></a>刷题说明</h3><ul>\n<li>我这里只做了LeetCode 热题 HOT 100中的 <strong>easy</strong> 和 <strong>middle</strong> 的题，<strong>hard</strong> 的题难度较大暂时都跳过了（题目上都有 <del>删除线</del> 标识），大部分面试也不会考察，后面有精力再做研究。</li>\n<li>题目后带有 <strong>★</strong> 标识的表示后续还要继续反复练习，题目可能不难，但有时可能会忽略其中的一些刷题细节而导致错误</li>\n<li>每一种类型的题目，并不绝对是按照题号递增的顺序来排列的（当然大部分都是按题号大小排好序的）。</li>\n<li>因为有些题目其实很相似，放在一起更好，便单独对他们做了调整，比如 <a href=\"#647-%E5%9B%9E%E6%96%87%E5%AD%90%E4%B8%B2\">647. 回文子串</a> 和 <a href=\"#5-%E6%9C%80%E9%95%BF%E5%9B%9E%E6%96%87%E5%AD%90%E4%B8%B2\">5. 最长回文子串</a></li>\n<li>这里面的每一道题，都有相对应我自己日常整理的题解，具体可参考：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM3MTAyOTg0L2FydGljbGUvZGV0YWlscy8xMjg1NzYyODM=\">我的博客-LeetCode专栏题解</span>，在里面搜对应题号即可 ~</li>\n<li>大家在浏览时，可以通过下方⬇️按题型分类汇总后的【目录】来实现快速跳转，更方便、更快捷的刷题。</li>\n<li>同时这篇文章我也是我花费了很长的时间，对比多篇文章来总结和编写的，希望对大家有所帮助。</li>\n</ul>\n<h2 id=\"文章目录\"><a href=\"#文章目录\" class=\"headerlink\" title=\"文章目录\"></a>文章目录</h2><h3 id=\"一、链表（共11题）\"><a href=\"#一、链表（共11题）\" class=\"headerlink\" title=\"一、链表（共11题）\"></a>一、链表（共11题）</h3><ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9hZGQtdHdvLW51bWJlcnMvZGVzY3JpcHRpb24v\">2. 两数相加</span> <strong>★</strong></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9yZW1vdmUtbnRoLW5vZGUtZnJvbS1lbmQtb2YtbGlzdC9kZXNjcmlwdGlvbi8=\">19. 删除链表的倒数第 N 个结点</span> <strong>★</strong></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9tZXJnZS10d28tc29ydGVkLWxpc3RzLz9mYXZvcml0ZT0yY2t0a3Zq\">21. 合并两个有序链表</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9tZXJnZS1rLXNvcnRlZC1saXN0cy9kZXNjcmlwdGlvbi8/ZmF2b3JpdGU9MmNrdGt2ag==\">23. 合并K个升序链表</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9saW5rZWQtbGlzdC1jeWNsZS8/ZmF2b3JpdGU9MmNrdGt2ag==\">141. 环形链表</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9saW5rZWQtbGlzdC1jeWNsZS1paS9kZXNjcmlwdGlvbi8/ZmF2b3JpdGU9MmNrdGt2ag==\">142. 环形链表 II</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9zb3J0LWxpc3QvZGVzY3JpcHRpb24v\">148. 排序链表</span> <strong>★</strong></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9pbnRlcnNlY3Rpb24tb2YtdHdvLWxpbmtlZC1saXN0cy8/ZmF2b3JpdGU9MmNrdGt2ag==\">160. 相交链表</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9yZXZlcnNlLWxpbmtlZC1saXN0L2Rlc2NyaXB0aW9uLw==\">206. 反转链表</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9wYWxpbmRyb21lLWxpbmtlZC1saXN0L2Rlc2NyaXB0aW9uLw==\">234. 回文链表</span> <strong>★</strong></li>\n<li><del><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9xdWV1ZS1yZWNvbnN0cnVjdGlvbi1ieS1oZWlnaHQvP2Zhdm9yaXRlPTJja3Rrdmo=\">406. 根据身高重建队列</span></del>（middle题，暂时跳过）</li>\n</ul>\n<h2 id=\"详细题解\"><a href=\"#详细题解\" class=\"headerlink\" title=\"详细题解\"></a>详细题解</h2><h3 id=\"一、链表（共11题）-1\"><a href=\"#一、链表（共11题）-1\" class=\"headerlink\" title=\"一、链表（共11题）\"></a>一、链表（共11题）</h3><h4 id=\"2-两数相加-★\"><a href=\"#2-两数相加-★\" class=\"headerlink\" title=\"2. 两数相加 ★\"></a><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9hZGQtdHdvLW51bWJlcnMvZGVzY3JpcHRpb24v\">2. 两数相加</span> <strong>★</strong></h4><p>注意分别处理 【相同数位上的两数之和 val1 + val2，并加上上一轮新产生的进位值 carry：sum &#x3D; val1 + val2 + carry】 与 【这一轮新产生的进位值 carry &#x3D; carry &#x2F; 10】。</p>\n<p>并且当两链表 l1 和 l2 都遍历完后，记得额外处理最后的一次进位。例如：99+9&#x3D;108，这里需要单独处理百位最后的1。</p>\n<h4 id=\"19-删除链表的倒数第-N-个结点-★\"><a href=\"#19-删除链表的倒数第-N-个结点-★\" class=\"headerlink\" title=\"19. 删除链表的倒数第 N 个结点 ★\"></a><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9yZW1vdmUtbnRoLW5vZGUtZnJvbS1lbmQtb2YtbGlzdC9kZXNjcmlwdGlvbi8=\">19. 删除链表的倒数第 N 个结点</span> <strong>★</strong></h4><ul>\n<li>注意 先创建虚拟头节点 dummy，且 dummy.Next &#x3D; head。防止当链表头节点head为待删除节点时，删除该节点后链表头head为空的情况（边界情况）</li>\n<li>如果我们能得到倒数第n个节点的前驱节点而不是倒数第n个节点，那么删除操作会更加方便。因此我们可以考虑在初始时创建 快慢指针 fast和 slow，并将这两个指针指向哑节点 dummy，其余操作不变。这样一来，当 fast遍历到链表末尾时，slow的下一个节点就是我们需要删除的节点。</li>\n<li>快指针先走n步，然后快指针和慢指针再每次各走一步</li>\n<li>删除倒数第n个节点：slow.Next &#x3D; slow.Next.Next，注意不是 slow.Next &#x3D; fast</li>\n<li>最后返回虚拟头节点的后继节点：dummy.Next</li>\n</ul>\n<p>类似题目有：</p>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9kZWxldGUtbm9kZS1pbi1hLWxpbmtlZC1saXN0L2Rlc2NyaXB0aW9uLw==\">237. 删除链表中的节点</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9zaGFuLWNodS1saWFuLWJpYW8tZGUtamllLWRpYW4tbGNvZi9kZXNjcmlwdGlvbi8=\">剑指 Offer 18. 删除链表的节点</span></li>\n</ul>\n<h4 id=\"21-合并两个有序链表\"><a href=\"#21-合并两个有序链表\" class=\"headerlink\" title=\"21. 合并两个有序链表\"></a><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9tZXJnZS10d28tc29ydGVkLWxpc3RzLz9mYXZvcml0ZT0yY2t0a3Zq\">21. 合并两个有序链表</span></h4><p>两种方法：递归 和 迭代 。</p>\n<h4 id=\"23-合并K个升序链表\"><a href=\"#23-合并K个升序链表\" class=\"headerlink\" title=\"23. 合并K个升序链表\"></a><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9tZXJnZS1rLXNvcnRlZC1saXN0cy9kZXNjcmlwdGlvbi8/ZmF2b3JpdGU9MmNrdGt2ag==\">23. 合并K个升序链表</span></h4><p>在 <a href=\"#21-%E5%90%88%E5%B9%B6%E4%B8%A4%E4%B8%AA%E6%9C%89%E5%BA%8F%E9%93%BE%E8%A1%A8\">21. 合并两个有序链表</a> 的基础上，使用</p>\n<ul>\n<li><strong>递归法（推荐，时间复杂度更优）</strong>，参考 LeetCode题解-分治法<ul>\n<li>时间复杂度：O(nlog⁡k)，其中 k 为 lists 的长度，n 为所有链表的节点数之和。每个节点参与链表合并的次数为 O(log⁡k) 次，一共有 n 个节点，所以总的时间复杂度为 O(nlog⁡k)。</li>\n<li>空间复杂度：O(log⁡k) 递归深度为 O(log⁡k)，需要用到 O(log⁡k)的栈空间。</li>\n</ul>\n</li>\n<li><strong>迭代法（不推荐，时间复杂度较高）</strong>：遍历链表数组，两两合并。<ul>\n<li>时间复杂度 O(nk)，时间复杂度高于递归法</li>\n</ul>\n</li>\n</ul>\n<p>有两个细节需要特别注意：</p>\n<ol>\n<li>在方法 mergeKLists()中，初始化链表时，采用如下写法：</li>\n</ol>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> res *ListNode</span><br><span class=\"line\"><span class=\"comment\">// res := &amp;ListNode&#123;&#125; // 错误写法，会初始化res为0值，导致结果集多一个0值</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i := <span class=\"number\">0</span>; i &lt; <span class=\"built_in\">len</span>(lists); i++ &#123;</span><br><span class=\"line\">    res = mergeTwoLists(res, lists[i])</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li>而在方法 mergeTwoLists()中，初始化虚拟节点 head时，则为：</li>\n</ol>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// var head *ListNode // 错误写法 会空指针异常</span></span><br><span class=\"line\">head := &amp;ListNode&#123;&#125;</span><br><span class=\"line\">cur := head</span><br><span class=\"line\">...</span><br><span class=\"line\"><span class=\"keyword\">return</span> head.Next</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"141-环形链表\"><a href=\"#141-环形链表\" class=\"headerlink\" title=\"141. 环形链表\"></a><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9saW5rZWQtbGlzdC1jeWNsZS8/ZmF2b3JpdGU9MmNrdGt2ag==\">141. 环形链表</span></h4><p>判断快慢指针是否相遇（快指针两步，慢指针一步）</p>\n<h4 id=\"142-环形链表-II\"><a href=\"#142-环形链表-II\" class=\"headerlink\" title=\"142. 环形链表 II\"></a><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9saW5rZWQtbGlzdC1jeWNsZS1paS9kZXNjcmlwdGlvbi8/ZmF2b3JpdGU9MmNrdGt2ag==\">142. 环形链表 II</span></h4><p>先判断快慢指针是否相遇（快指针两步，慢指针一步），若相遇则将快指针重置到头结点，然后快慢指针每次各走一步，直至相遇</p>\n<h4 id=\"148-排序链表-★\"><a href=\"#148-排序链表-★\" class=\"headerlink\" title=\"148. 排序链表 ★\"></a><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9zb3J0LWxpc3QvZGVzY3JpcHRpb24v\">148. 排序链表</span> <strong>★</strong></h4><p>题目要求时间复杂度为：O(NlogN)，故采用归并排序的思想（拆分→排序→合并）</p>\n<ul>\n<li>先通过快慢指针找到链表中点，并切割为前后两部分</li>\n<li>不断递归上述过程，直至最终将链表切割为多个长度为1的链表</li>\n<li>最后不断合并这多个长度为1的链表（此比较大小并合并的过程，与 <a href=\"#21-%E5%90%88%E5%B9%B6%E4%B8%A4%E4%B8%AA%E6%9C%89%E5%BA%8F%E9%93%BE%E8%A1%A8\">21. 合并两个有序链表</a> 一样）</li>\n</ul>\n<h4 id=\"160-相交链表\"><a href=\"#160-相交链表\" class=\"headerlink\" title=\"160. 相交链表\"></a><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9pbnRlcnNlY3Rpb24tb2YtdHdvLWxpbmtlZC1saXN0cy8/ZmF2b3JpdGU9MmNrdGt2ag==\">160. 相交链表</span></h4><p>用双指针pA 、pB分别遍历两个链表，pA对链表A遍历结束后就去遍历链表B，pB对链表B遍历结束后就遍历链表A。当 pA &#x3D;&#x3D; pB 时，相遇节点即为交点，因为两个指针分别移动的步数是一样的。</p>\n<h4 id=\"206-反转链表\"><a href=\"#206-反转链表\" class=\"headerlink\" title=\"206. 反转链表\"></a><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9yZXZlcnNlLWxpbmtlZC1saXN0L2Rlc2NyaXB0aW9uLw==\">206. 反转链表</span></h4><p>注意go中要用该方式初始化 <code>var pre, mid, end *ListNode = nil, head, nil</code>，而不是 <code>pre, mid, end := &amp;ListNode&#123;&#125;, head, &amp;ListNode&#123;&#125;</code>，否则会在反转后的尾节点添加值为0的 “空节点”，导致错误</p>\n<p>类似题目：</p>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9yZXZlcnNlLWxpbmtlZC1saXN0LWlpL2Rlc2NyaXB0aW9uLw==\">92. 反转链表 II</span>，反转指定区间内的链表</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9yZXZlcnNlLW5vZGVzLWluLWstZ3JvdXAvZGVzY3JpcHRpb24v\">25. K 个一组翻转链表</span>，虽然是困难题，但是也是常考的高频题</li>\n</ul>\n<h4 id=\"234-回文链表-★\"><a href=\"#234-回文链表-★\" class=\"headerlink\" title=\"234. 回文链表 ★\"></a><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9wYWxpbmRyb21lLWxpbmtlZC1saXN0L2Rlc2NyaXB0aW9uLw==\">234. 回文链表</span> <strong>★</strong></h4><ul>\n<li>先通过快慢指针找链表中点，划分为前半部分和后半部分；注意寻找链表中点时的判断条件：<code>for fast.Next != nil &amp;&amp; fast.Next.Next != nil &#123;...&#125;</code></li>\n<li>再反转后半部分链表；</li>\n<li>最后将两部分链表的节点逐个比较</li>\n</ul>\n<h4 id=\"406-根据身高重建队列（middle题，暂时跳过）\"><a href=\"#406-根据身高重建队列（middle题，暂时跳过）\" class=\"headerlink\" title=\"406. 根据身高重建队列（middle题，暂时跳过）\"></a><del><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9xdWV1ZS1yZWNvbnN0cnVjdGlvbi1ieS1oZWlnaHQvP2Zhdm9yaXRlPTJja3Rrdmo=\">406. 根据身高重建队列</span></del>（middle题，暂时跳过）</h4><h3 id=\"二、二叉树（共14题，含2道hard题）\"><a href=\"#二、二叉树（共14题，含2道hard题）\" class=\"headerlink\" title=\"二、二叉树（共14题，含2道hard题）\"></a>二、二叉树（共14题，含2道hard题）</h3><p><strong>做题心得：</strong></p>\n<ul>\n<li>处理递归，核心就是千万不要想子问题的过程，你脑子能处理几层？马上就绕迷糊了。要想子问题的结果，思路就清晰了</li>\n<li>是的，只要代码的边界条件和非边界条件的逻辑写对了，其他的事情交给数学归纳法就好了。也就是说，写对了这两个逻辑，你的代码自动就是正确的了，没必要想递归是怎么一层一层走的。</li>\n<li>跟树相关的题，一般有两种解法：递归&amp;迭代：递归用dfs，而迭代用bfs（队列）</li>\n<li>Go 语言的深度优先遍历算法可以采用闭包函数实现，这样省去了许多参数的传递与全局变量的声明。</li>\n</ul>\n<p>另外，关于递归，看到该题讨论区有一个评论，对于递归的理解很有帮助，特意截图留念。</p>\n<h4 id=\"94-二叉树的中序遍历\"><a href=\"#94-二叉树的中序遍历\" class=\"headerlink\" title=\"94. 二叉树的中序遍历\"></a><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9iaW5hcnktdHJlZS1pbm9yZGVyLXRyYXZlcnNhbC8/ZmF2b3JpdGU9MmNrdGt2ag==\">94. 二叉树的中序遍历</span></h4><ul>\n<li>递归 or 迭代（利用栈的先进后出特性），必会</li>\n</ul>\n<p>类似题目：</p>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9iaW5hcnktdHJlZS1wcmVvcmRlci10cmF2ZXJzYWwvZGVzY3JpcHRpb24v\">144. 二叉树的前序遍历</span> 利用栈，类似于中序遍历</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9iaW5hcnktdHJlZS1wb3N0b3JkZXItdHJhdmVyc2FsL2Rlc2NyaXB0aW9uLw==\">145. 二叉树的后序遍历</span> 利用栈，有一个标记根节点的flagMap，用来标记第几次经过某个根节点root，只有第二次经过某个根节点时，才存储其结果，并将其出栈置空。</li>\n</ul>\n<h4 id=\"98-验证二叉搜索树-★★★\"><a href=\"#98-验证二叉搜索树-★★★\" class=\"headerlink\" title=\"98. 验证二叉搜索树 ★★★\"></a><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy92YWxpZGF0ZS1iaW5hcnktc2VhcmNoLXRyZWUvP2Zhdm9yaXRlPTJja3Rrdmo=\">98. 验证二叉搜索树</span> <strong>★★★</strong></h4><p>利用二叉搜索树的中序遍历为升序序列这一性质，来递归验证。</p>\n<p><strong>方法一：</strong> 官方题解 通过限制每个子树中的上下界（lower和upper）来判断，需额外引入常量：math.MinInt64, math.MaxInt64，不推荐，也没必要。</p>\n<p><strong>方法二：</strong> 双指针比较法（pre和node），参考 B站视频题解，不需额外引入常量，而只需通过一个pre指针，在向上回溯的过程中，不断保存之前的节点用于比较。</p>\n<ul>\n<li>首先【不断向左子树递归】直至最后空节点：<code>left := dfs(node.Left)</code></li>\n<li>然后再自底向上【回溯】的过程中，pre每次保存的都是之前上一层栈空间中的根节点，并不断将当前node节点和pre节点的值做比较：<code>if pre != nil &amp;&amp; node.Val &lt;= pre.Val &#123; return false &#125;</code><ul>\n<li>当 node &#x3D; root 时，pre &#x3D; root.Left，pre的值应永远小于node的值（满足二叉搜索树中，左子节点值 &lt; 根节点值）</li>\n<li>当 node &#x3D; root.Right时，pre &#x3D; root，pre的值应永远小于node的值（满足二叉搜索树中，根节点值 &lt; 右子节点值）</li>\n</ul>\n</li>\n<li>保存当前节点node到pre中，用于下层递归中做比较</li>\n<li>然后不断向右子树递归：<code>right := dfs(node.Right)</code></li>\n<li>最后返回：<code>return left &amp;&amp; right</code>，判断当前节点的左右子树是否分别是二叉搜索树</li>\n</ul>\n<h4 id=\"101-对称二叉树\"><a href=\"#101-对称二叉树\" class=\"headerlink\" title=\"101. 对称二叉树\"></a><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9zeW1tZXRyaWMtdHJlZS9kZXNjcmlwdGlvbi8=\">101. 对称二叉树</span></h4><p><strong>解法1 递归：</strong></p>\n<ul>\n<li>if 左节点和右节点均为空，说明遍历完了，返回 true</li>\n<li>否则说明左右两个节点并非同时为空，那么判断：if 左节点和右节点其中一个为空（也就是一个为空，一个非空，那肯定不对称），或者左节点值不等于右节点值（不对称），返回 false</li>\n<li>最后继续递归下探：<br><code>return recur(左节点的左子节点，右节点的右子节点) &amp;&amp; recur(左节点的右子节点，右节点的左子节点)</code></li>\n</ul>\n<p><strong>解法2 迭代：</strong><br>层序遍历：通过队列来判断根节点的左子树和右子树的内侧和外侧是否相等，其中的条件判断和递归的逻辑是一样的。</p>\n<h4 id=\"102-二叉树的层序遍历\"><a href=\"#102-二叉树的层序遍历\" class=\"headerlink\" title=\"102. 二叉树的层序遍历\"></a><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9iaW5hcnktdHJlZS1sZXZlbC1vcmRlci10cmF2ZXJzYWwvZGVzY3JpcHRpb24vP2Zhdm9yaXRlPTJja3Rrdmo=\">102. 二叉树的层序遍历</span></h4><p>BFS层序遍历使用 queue 队列（先进先出）</p>\n<ul>\n<li>初始化队列，并将非空根节点 root入队</li>\n<li>判断队列大小是否非零，非零则进入外层for循环 <code>for len(queue) &gt; 0 &#123;</code><ul>\n<li>由于需要按层返回二维数组结果集，因此要提前缓存当前这一层的节点数 <code>length := len(queue)</code>，并创建用于保存这一层结果的临时数组 subRes。</li>\n<li>进入内循环 <code>for i := 0; i &lt; length; i++ &#123;</code><ul>\n<li>获取队头节点 root &#x3D; queue[0]，将其 root.Val值保存到临时数组 subRes中，再将该节点出队（它的使命已完成）</li>\n<li>将 root的非空左子节点 root.Left和非空右子节点 root.Right入队</li>\n</ul>\n</li>\n<li>将保存当前这一层结果集的临时数组 subRes追加到二维数组 res中</li>\n</ul>\n</li>\n<li>返回保存最终结果集的二维数组 res</li>\n</ul>\n<h4 id=\"104-二叉树的最大深度-★\"><a href=\"#104-二叉树的最大深度-★\" class=\"headerlink\" title=\"104. 二叉树的最大深度 ★\"></a><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9tYXhpbXVtLWRlcHRoLW9mLWJpbmFyeS10cmVlL2Rlc2NyaXB0aW9uLw==\">104. 二叉树的最大深度</span> <strong>★</strong></h4><ul>\n<li>递归法（dfs）</li>\n<li>迭代法（bfs）：利用队列（先进先出）。内层for循环保留上一层节点数，避免内层循环因为对queue进行append操作，导致队列元素个数发生变化</li>\n</ul>\n<h4 id=\"105-从前序与中序遍历序列构造二叉树-★★★\"><a href=\"#105-从前序与中序遍历序列构造二叉树-★★★\" class=\"headerlink\" title=\"105. 从前序与中序遍历序列构造二叉树 ★★★\"></a><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9jb25zdHJ1Y3QtYmluYXJ5LXRyZWUtZnJvbS1wcmVvcmRlci1hbmQtaW5vcmRlci10cmF2ZXJzYWwvZGVzY3JpcHRpb24v\">105. 从前序与中序遍历序列构造二叉树</span> <strong>★★★</strong></h4><p>推荐掌握递归法，迭代法比较难理解，不过都需要作图理解和推敲：左右子树分别在 前序&#x2F;中序 遍历中的左右边界。</p>\n<p><strong>递归法：</strong><br>先通过遍历inorder数组，找到根节点（值为preorder[0]）位于中序遍历中的下标位置 i。然后，根据中序遍历中根节点的下标位置 i，分别构建root的左右子树 …</p>\n<ol>\n<li>分别确定”左子树”在前序和中序遍历中的左右边界<ul>\n<li>确定前序遍历中左子树的左右边界：<ul>\n<li>root &#x3D; preorder[0]是根节点，所以前序遍历中左子树的左边界是1；</li>\n<li>然后根据根节点在中序遍历中的下标 i，可知【中序遍历中左子树的范围是0~ i】，由此可确定中序遍历中左子树的长度是 i（其实 i 的值也等于 len(inorder[:i])，但为了便于理解及简化代码量，就使用 i 来作为左子树的长度），又因为前序遍历中左子树的左边界为1，所以可得前序遍历中左子树的右边界为：i+1（或 len(inorder[:i])+1）</li>\n</ul>\n</li>\n<li>确定中序遍历中左子树的左右边界：由上面的分析中的【中序遍历中左子树的范围是0~ i】可得：inorder[:i]</li>\n</ul>\n</li>\n</ol>\n<p>最后可得：<code>root.Left = buildTree(preorder[1:i+1], inorder[:i])</code></p>\n<ol start=\"2\">\n<li>分别确定”右子树”在前序和中序遍历中的左右边界<ul>\n<li>确定前序遍历中右子树的左右边界：<ul>\n<li>由 1.1 可知当前左子树的长度是 i（其实 i 的值也等于 len(inorder[:i])，但为了便于理解及简化代码量，就使用 i 来作为左子树的长度），且根节点也占一个位置，因此可得前序遍历中右子树的左边界为：i+1（或 len(inorder[:i])+1），右子树右边界一直到preorder末尾</li>\n</ul>\n</li>\n<li>确定中序遍历中右子树的左右边界：<ul>\n<li>由于之前已经找出根节点位于中序遍历中的下标位置是 i，所以 i+1就是中序遍历中右子树的左边界，右边界一直到inorder末尾</li>\n</ul>\n</li>\n</ul>\n</li>\n</ol>\n<p>最后可得：<code>root.Right = buildTree(preorder[i+1:], inorder[i+1:])</code></p>\n<p><strong>迭代法：</strong><br>preorder第一个元素为root，在inorder里面找到root，在它之前的为左子树（长l1），之后为右子树（长l2）。preorder[1]到preorder[l1]为左子树,之后为右子树，分别递归。</p>\n<p>主要难点在于需要分别确定前序遍历和中序遍历中的左右子树的左右边界对应关系。</p>\n<h4 id=\"114-二叉树展开为链表-★★★\"><a href=\"#114-二叉树展开为链表-★★★\" class=\"headerlink\" title=\"114. 二叉树展开为链表 ★★★\"></a><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9mbGF0dGVuLWJpbmFyeS10cmVlLXRvLWxpbmtlZC1saXN0Lz9mYXZvcml0ZT0yY2t0a3Zq\">114. 二叉树展开为链表</span> <strong>★★★</strong></h4><ul>\n<li><strong>方法1：</strong> 先前序遍历 获得各节点被访问到的顺序，然后更新每个节点的左右子节点的信息，将二叉树展开为单链表。</li>\n<li><strong>方法2：</strong> 没理解这个递归逻辑，继续研究</li>\n</ul>\n<h4 id=\"124-二叉树中的最大路径和（hard题，暂时跳过）\"><a href=\"#124-二叉树中的最大路径和（hard题，暂时跳过）\" class=\"headerlink\" title=\"124. 二叉树中的最大路径和（hard题，暂时跳过）\"></a><del><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9iaW5hcnktdHJlZS1tYXhpbXVtLXBhdGgtc3VtL2Rlc2NyaXB0aW9uLz9mYXZvcml0ZT0yY2t0a3Zq\">124. 二叉树中的最大路径和</span></del>（hard题，暂时跳过）</h4><h4 id=\"226-翻转二叉树\"><a href=\"#226-翻转二叉树\" class=\"headerlink\" title=\"226. 翻转二叉树\"></a><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9pbnZlcnQtYmluYXJ5LXRyZWUvZGVzY3JpcHRpb24vP2Zhdm9yaXRlPTJja3Rrdmo=\">226. 翻转二叉树</span></h4><h4 id=\"236-二叉树的最近公共祖先-★\"><a href=\"#236-二叉树的最近公共祖先-★\" class=\"headerlink\" title=\"236. 二叉树的最近公共祖先 ★\"></a><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9sb3dlc3QtY29tbW9uLWFuY2VzdG9yLW9mLWEtYmluYXJ5LXRyZWUvZGVzY3JpcHRpb24v\">236. 二叉树的最近公共祖先</span> <strong>★</strong></h4><p>求最小公共祖先，需要从底向上遍历。那么二叉树 只能通过后序遍历（即：回溯）实现从底向上的遍历方式。</p>\n<h4 id=\"297-二叉树的序列化与反序列化（hard题，暂时跳过）\"><a href=\"#297-二叉树的序列化与反序列化（hard题，暂时跳过）\" class=\"headerlink\" title=\"297. 二叉树的序列化与反序列化（hard题，暂时跳过）\"></a><del><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9zZXJpYWxpemUtYW5kLWRlc2VyaWFsaXplLWJpbmFyeS10cmVlLz9mYXZvcml0ZT0yY2t0a3Zq\">297. 二叉树的序列化与反序列化</span></del>（hard题，暂时跳过）</h4><h4 id=\"538-把二叉搜索树转换为累加树-★\"><a href=\"#538-把二叉搜索树转换为累加树-★\" class=\"headerlink\" title=\"538. 把二叉搜索树转换为累加树 ★\"></a><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9jb252ZXJ0LWJzdC10by1ncmVhdGVyLXRyZWUvZGVzY3JpcHRpb24v\">538. 把二叉搜索树转换为累加树</span> <strong>★</strong></h4><p>以 反中序遍历（右中左）的方式不断累加并更新每个节点值即可</p>\n<h4 id=\"543-二叉树的直径-★\"><a href=\"#543-二叉树的直径-★\" class=\"headerlink\" title=\"543. 二叉树的直径 ★\"></a><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9kaWFtZXRlci1vZi1iaW5hcnktdHJlZS9kZXNjcmlwdGlvbi8=\">543. 二叉树的直径</span> <strong>★</strong></h4><p>【前序遍历】思想：任意一条路径均可以被看作由某个节点为起点，从其左儿子和右儿子向下遍历的路径拼接得到。</p>\n<h4 id=\"617-合并二叉树\"><a href=\"#617-合并二叉树\" class=\"headerlink\" title=\"617. 合并二叉树\"></a><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9tZXJnZS10d28tYmluYXJ5LXRyZWVzLz9mYXZvcml0ZT0yY2t0a3Zq\">617. 合并二叉树</span></h4><p>可用两种方式操作树：原地修改 or 新建树</p>\n<p><strong>新版 hot100 题目扩充（以下题目列表不断更新ing~）：</strong></p>\n<h4 id=\"LeetCode-108-将有序数组转换为二叉搜索树\"><a href=\"#LeetCode-108-将有序数组转换为二叉搜索树\" class=\"headerlink\" title=\"LeetCode 108. 将有序数组转换为二叉搜索树\"></a><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9jb252ZXJ0LXNvcnRlZC1hcnJheS10by1iaW5hcnktc2VhcmNoLXRyZWUvZGVzY3JpcHRpb24v\">LeetCode 108. 将有序数组转换为二叉搜索树</span></h4><ul>\n<li><p>二叉搜索树BST 的【中序遍历】是升序的，因此本题等同于根据中序遍历的序列恢复二叉搜索树</p>\n</li>\n<li><p>虽然我们可以以升序序列中的任一个元素作为根节点</p>\n</li>\n<li><p>但是因为本题要求【高度平衡】，因此我们需要选择升序序列的【中间元素】作为根节点奥～</p>\n</li>\n<li><p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9iaW5hcnktdHJlZS1pbm9yZGVyLXRyYXZlcnNhbC8/ZmF2b3JpdGU9MmNrdGt2ag==\">94. 二叉树的中序遍历</span></p>\n</li>\n<li><p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy92YWxpZGF0ZS1iaW5hcnktc2VhcmNoLXRyZWUvP2Zhdm9yaXRlPTJja3Rrdmo=\">98. 验证二叉搜索树</span> <strong>★★★</strong></p>\n</li>\n<li><p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9zeW1tZXRyaWMtdHJlZS9kZXNjcmlwdGlvbi8=\">101. 对称二叉树</span></p>\n</li>\n<li><p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9iaW5hcnktdHJlZS1sZXZlbC1vcmRlci10cmF2ZXJzYWwvZGVzY3JpcHRpb24vP2Zhdm9yaXRlPTJja3Rrdmo=\">102. 二叉树的层序遍历</span></p>\n</li>\n<li><p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9tYXhpbXVtLWRlcHRoLW9mLWJpbmFyeS10cmVlL2Rlc2NyaXB0aW9uLw==\">104. 二叉树的最大深度</span> <strong>★</strong></p>\n</li>\n<li><p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9jb25zdHJ1Y3QtYmluYXJ5LXRyZWUtZnJvbS1wcmVvcmRlci1hbmQtaW5vcmRlci10cmF2ZXJzYWwvZGVzY3JpcHRpb24v\">105. 从前序与中序遍历序列构造二叉树</span> <strong>★★★</strong></p>\n</li>\n<li><p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9mbGF0dGVuLWJpbmFyeS10cmVlLXRvLWxpbmtlZC1saXN0Lz9mYXZvcml0ZT0yY2t0a3Zq\">114. 二叉树展开为链表</span> <strong>★★★</strong></p>\n</li>\n<li><p><del><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9iaW5hcnktdHJlZS1tYXhpbXVtLXBhdGgtc3VtL2Rlc2NyaXB0aW9uLz9mYXZvcml0ZT0yY2t0a3Zq\">124. 二叉树中的最大路径和</span></del>（hard题，暂时跳过）</p>\n</li>\n<li><p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9pbnZlcnQtYmluYXJ5LXRyZWUvZGVzY3JpcHRpb24vP2Zhdm9yaXRlPTJja3Rrdmo=\">226. 翻转二叉树</span></p>\n</li>\n<li><p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9sb3dlc3QtY29tbW9uLWFuY2VzdG9yLW9mLWEtYmluYXJ5LXRyZWUvZGVzY3JpcHRpb24v\">236. 二叉树的最近公共祖先</span> <strong>★</strong></p>\n</li>\n<li><p><del><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9zZXJpYWxpemUtYW5kLWRlc2VyaWFsaXplLWJpbmFyeS10cmVlLz9mYXZvcml0ZT0yY2t0a3Zq\">297. 二叉树的序列化与反序列化</span></del>（hard题，暂时跳过）</p>\n</li>\n<li><p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9jb252ZXJ0LWJzdC10by1ncmVhdGVyLXRyZWUvZGVzY3JpcHRpb24v\">538. 把二叉搜索树转换为累加树</span> <strong>★</strong></p>\n</li>\n<li><p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9kaWFtZXRlci1vZi1iaW5hcnktdHJlZS9kZXNjcmlwdGlvbi8=\">543. 二叉树的直径</span> <strong>★</strong></p>\n</li>\n<li><p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9tZXJnZS10d28tYmluYXJ5LXRyZWVzLz9mYXZvcml0ZT0yY2t0a3Zq\">617. 合并二叉树</span></p>\n</li>\n</ul>\n<p><strong>新版 hot100 题目扩充（以下题目列表不断更新ing~）：</strong></p>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9jb252ZXJ0LXNvcnRlZC1hcnJheS10by1iaW5hcnktc2VhcmNoLXRyZWUvZGVzY3JpcHRpb24v\">LeetCode 108. 将有序数组转换为二叉搜索树</span></li>\n</ul>\n<h3 id=\"三、DFS-BFS（共6题，含3道hard题）\"><a href=\"#三、DFS-BFS（共6题，含3道hard题）\" class=\"headerlink\" title=\"三、DFS&#x2F;BFS（共6题，含3道hard题）\"></a>三、DFS&#x2F;BFS（共6题，含3道hard题）</h3><ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy93b3JkLXNlYXJjaC9kZXNjcmlwdGlvbi8=\">79. 单词搜索</span> <strong>★</strong></li>\n<li><del><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9tYXhpbWFsLXJlY3RhbmdsZS8/ZmF2b3JpdGU9MmNrdGt2ag==\">85. 最大矩形</span></del> （hard题，暂时跳过）</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9udW1iZXItb2YtaXNsYW5kcy9kZXNjcmlwdGlvbi8=\">200. 岛屿数量</span></li>\n<li><del><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9jb3Vyc2Utc2NoZWR1bGUvP2Zhdm9yaXRlPTJja3Rrdmo=\">207. 课程表</span></del> （hard题，暂时跳过）</li>\n<li><del><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9yZW1vdmUtaW52YWxpZC1wYXJlbnRoZXNlcy9kZXNjcmlwdGlvbi8/ZmF2b3JpdGU9MmNrdGt2ag==\">301. 删除无效的括号</span></del> （hard题，暂时跳过）</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9wYXRoLXN1bS1paWkvc29sdXRpb25zLw==\">437. 路径总和 III</span> <strong>★</strong></li>\n</ul>\n<h3 id=\"四、递归-回溯（共6题，含1道hard题）\"><a href=\"#四、递归-回溯（共6题，含1道hard题）\" class=\"headerlink\" title=\"四、递归&#x2F;回溯（共6题，含1道hard题）\"></a>四、递归&#x2F;回溯（共6题，含1道hard题）</h3><ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9sZXR0ZXItY29tYmluYXRpb25zLW9mLWEtcGhvbmUtbnVtYmVyL2Rlc2NyaXB0aW9uLw==\">17. 电话号码的字母组合</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9nZW5lcmF0ZS1wYXJlbnRoZXNlcy9kZXNjcmlwdGlvbi8=\">22. 括号生成</span> <strong>★</strong></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9jb21iaW5hdGlvbi1zdW0vZGVzY3JpcHRpb24v\">39. 组合总和</span> <strong>★</strong></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9wZXJtdXRhdGlvbnMvP2Zhdm9yaXRlPTJja3Rrdmo=\">46. 全排列</span> <strong>★</strong></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9zdWJzZXRzL2Rlc2NyaXB0aW9uLw==\">78. 子集</span> <strong>★</strong></li>\n<li><del><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9ldmFsdWF0ZS1kaXZpc2lvbi9kZXNjcmlwdGlvbi8/ZmF2b3JpdGU9MmNrdGt2ag==\">399. 除法求值</span></del> （hard题，暂时跳过）</li>\n</ul>\n<h3 id=\"五、Hash表-map（共3题）\"><a href=\"#五、Hash表-map（共3题）\" class=\"headerlink\" title=\"五、Hash表&#x2F;map（共3题）\"></a>五、Hash表&#x2F;map（共3题）</h3><ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy90d28tc3VtL2Rlc2NyaXB0aW9uLw==\">1. 两数之和</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9ncm91cC1hbmFncmFtcy9kZXNjcmlwdGlvbi8=\">49. 字母异位词分组</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9sb25nZXN0LWNvbnNlY3V0aXZlLXNlcXVlbmNlL2Rlc2NyaXB0aW9uLz9mYXZvcml0ZT0yY2t0a3Zq\">128. 最长连续序列</span></li>\n</ul>\n<h3 id=\"六、位运算（共3题）\"><a href=\"#六、位运算（共3题）\" class=\"headerlink\" title=\"六、位运算（共3题）\"></a>六、位运算（共3题）</h3><ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9zaW5nbGUtbnVtYmVyL2Rlc2NyaXB0aW9uLw==\">136. 只出现一次的数字</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9jb3VudGluZy1iaXRzL2Rlc2NyaXB0aW9uLw==\">338. 比特位计数</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9oYW1taW5nLWRpc3RhbmNlL2Rlc2NyaXB0aW9uLw==\">461. 汉明距离</span></li>\n</ul>\n<h3 id=\"七、数组（共5题）\"><a href=\"#七、数组（共5题）\" class=\"headerlink\" title=\"七、数组（共5题）\"></a>七、数组（共5题）</h3><ul>\n<li><del><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy8zc3VtL2Rlc2NyaXB0aW9uLz9mYXZvcml0ZT0yY2t0a3Zq\">15. 三数之和</span></del> 待研究</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9uZXh0LXBlcm11dGF0aW9uL2Rlc2NyaXB0aW9uLw==\">31. 下一个排列</span> <strong>★★★</strong></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9tYWpvcml0eS1lbGVtZW50L2Rlc2NyaXB0aW9uLw==\">169. 多数元素</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9wcm9kdWN0LW9mLWFycmF5LWV4Y2VwdC1zZWxmL2Rlc2NyaXB0aW9uLw==\">238. 除自身以外数组的乘积</span> <strong>★</strong></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9maW5kLWFsbC1udW1iZXJzLWRpc2FwcGVhcmVkLWluLWFuLWFycmF5L2Rlc2NyaXB0aW9uLw==\">448. 找到所有数组中消失的数字</span> <strong>★</strong></li>\n</ul>\n<h3 id=\"八、二分查找（共5题，含1道hard题）\"><a href=\"#八、二分查找（共5题，含1道hard题）\" class=\"headerlink\" title=\"八、二分查找（共5题，含1道hard题）\"></a>八、二分查找（共5题，含1道hard题）</h3><ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9tZWRpYW4tb2YtdHdvLXNvcnRlZC1hcnJheXMvZGVzY3JpcHRpb24v\">4. 寻找两个正序数组的中位数</span> （hard题）</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9zZWFyY2gtaW4tcm90YXRlZC1zb3J0ZWQtYXJyYXkvZGVzY3JpcHRpb24v\">33. 搜索旋转排序数组</span> <strong>★</strong></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9maW5kLWZpcnN0LWFuZC1sYXN0LXBvc2l0aW9uLW9mLWVsZW1lbnQtaW4tc29ydGVkLWFycmF5L2Rlc2NyaXB0aW9uLw==\">34. 在排序数组中查找元素的第一个和最后一个位置</span> <strong>★★</strong></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9zZWFyY2gtYS0yZC1tYXRyaXgtaWkvZGVzY3JpcHRpb24vP2Zhdm9yaXRlPTJja3Rrdmo=\">240. 搜索二维矩阵 II</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9maW5kLXRoZS1kdXBsaWNhdGUtbnVtYmVyL2Rlc2NyaXB0aW9uLw==\">287. 寻找重复数</span> <strong>★★</strong></li>\n</ul>\n<p><strong>新版 hot100 题目扩充（以下题目列表不断更新ing~）：</strong></p>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9zZWFyY2gtaW5zZXJ0LXBvc2l0aW9uL2Rlc2NyaXB0aW9uLw==\">LeetCode 35. 搜索插入位置</span></li>\n</ul>\n<h3 id=\"九、双指针-三指针（共3题）\"><a href=\"#九、双指针-三指针（共3题）\" class=\"headerlink\" title=\"九、双指针&#x2F;三指针（共3题）\"></a>九、双指针&#x2F;三指针（共3题）</h3><ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9jb250YWluZXItd2l0aC1tb3N0LXdhdGVyL2Rlc2NyaXB0aW9uLw==\">11. 盛最多水的容器</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9zb3J0LWNvbG9ycy9kZXNjcmlwdGlvbi8=\">75. 颜色分类</span> <strong>★★</strong></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9tb3ZlLXplcm9lcy9kZXNjcmlwdGlvbi8=\">283. 移动零</span> <strong>★</strong></li>\n</ul>\n<h3 id=\"十、栈-单调栈（共6题，含2道hard题）\"><a href=\"#十、栈-单调栈（共6题，含2道hard题）\" class=\"headerlink\" title=\"十、栈&#x2F;单调栈（共6题，含2道hard题）\"></a>十、栈&#x2F;单调栈（共6题，含2道hard题）</h3><ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy92YWxpZC1wYXJlbnRoZXNlcy9kZXNjcmlwdGlvbi8=\">20. 有效的括号</span></li>\n<li><del><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy90cmFwcGluZy1yYWluLXdhdGVyLz9mYXZvcml0ZT0yY2t0a3Zq\">42. 接雨水</span></del> （hard题，暂时跳过）</li>\n<li><del><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9sYXJnZXN0LXJlY3RhbmdsZS1pbi1oaXN0b2dyYW0vP2Zhdm9yaXRlPTJja3Rrdmo=\">84. 柱状图中最大的矩形</span></del> （hard题，暂时跳过）</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9taW4tc3RhY2svZGVzY3JpcHRpb24v\">155. 最小栈</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9kZWNvZGUtc3RyaW5nL2Rlc2NyaXB0aW9uLw==\">394. 字符串解码</span> <strong>★★</strong></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9kYWlseS10ZW1wZXJhdHVyZXMvZGVzY3JpcHRpb24v\">739. 每日温度</span> <strong>★</strong></li>\n</ul>\n<h3 id=\"十一、排序（共4题）\"><a href=\"#十一、排序（共4题）\" class=\"headerlink\" title=\"十一、排序（共4题）\"></a>十一、排序（共4题）</h3><ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9tZXJnZS1pbnRlcnZhbHMvZGVzY3JpcHRpb24vP2Zhdm9yaXRlPTJja3Rrdmo=\">56. 合并区间</span> <strong>★</strong></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9rdGgtbGFyZ2VzdC1lbGVtZW50LWluLWFuLWFycmF5L2Rlc2NyaXB0aW9uLw==\">215. 数组中的第K个最大元素</span> <strong>★★★</strong></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy90b3Atay1mcmVxdWVudC1lbGVtZW50cy9kZXNjcmlwdGlvbi8=\">347. 前 K 个高频元素</span> <strong>★</strong></li>\n<li><del><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9zaG9ydGVzdC11bnNvcnRlZC1jb250aW51b3VzLXN1YmFycmF5L2Rlc2NyaXB0aW9uLz9mYXZvcml0ZT0yY2t0a3Zq\">581. 最短无序连续子数组</span></del>（middle题，暂时跳过）</li>\n</ul>\n<h3 id=\"十二、前缀和（共1题）\"><a href=\"#十二、前缀和（共1题）\" class=\"headerlink\" title=\"十二、前缀和（共1题）\"></a>十二、前缀和（共1题）</h3><ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9zdWJhcnJheS1zdW0tZXF1YWxzLWsvZGVzY3JpcHRpb24v\">560. 和为 K 的子数组</span></li>\n</ul>\n<h3 id=\"十三、字典树-前缀树（共1题）\"><a href=\"#十三、字典树-前缀树（共1题）\" class=\"headerlink\" title=\"十三、字典树&#x2F;前缀树（共1题）\"></a>十三、字典树&#x2F;前缀树（共1题）</h3><ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9pbXBsZW1lbnQtdHJpZS1wcmVmaXgtdHJlZS9kZXNjcmlwdGlvbi8=\">208. 实现 Trie (前缀树)</span> <strong>★★★</strong></li>\n</ul>\n<h3 id=\"十四、LRU缓存（共1题）\"><a href=\"#十四、LRU缓存（共1题）\" class=\"headerlink\" title=\"十四、LRU缓存（共1题）\"></a>十四、LRU缓存（共1题）</h3><ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9scnUtY2FjaGUvP2Zhdm9yaXRlPTJja3Rrdmo=\">146. LRU 缓存</span> <strong>★★★</strong></li>\n</ul>\n<h3 id=\"十五、动态规划（共23题，含6道hard题）\"><a href=\"#十五、动态规划（共23题，含6道hard题）\" class=\"headerlink\" title=\"十五、动态规划（共23题，含6道hard题）\"></a>十五、动态规划（共23题，含6道hard题）</h3><ul>\n<li><del><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9yZWd1bGFyLWV4cHJlc3Npb24tbWF0Y2hpbmcvZGVzY3JpcHRpb24vP2Zhdm9yaXRlPTJja3Rrdmo=\">10. 正则表达式匹配</span></del>（hard题，暂时跳过）</li>\n<li><del><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9sb25nZXN0LXZhbGlkLXBhcmVudGhlc2VzL2Rlc2NyaXB0aW9uLz9mYXZvcml0ZT0yY2t0a3Zq\">32. 最长有效括号</span></del>（hard题，暂时跳过）</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9tYXhpbXVtLXN1YmFycmF5L2Rlc2NyaXB0aW9uLw==\">53. 最大子数组和</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy91bmlxdWUtcGF0aHMvZGVzY3JpcHRpb24v\">62. 不同路径</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9taW5pbXVtLXBhdGgtc3VtLz9mYXZvcml0ZT0yY2t0a3Zq\">64. 最小路径和</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9jbGltYmluZy1zdGFpcnMvZGVzY3JpcHRpb24v\">70. 爬楼梯</span></li>\n<li><del><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9lZGl0LWRpc3RhbmNlLz9mYXZvcml0ZT0yY2t0a3Zq\">72. 编辑距离</span></del>（hard题，暂时跳过）</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy91bmlxdWUtYmluYXJ5LXNlYXJjaC10cmVlcy9kZXNjcmlwdGlvbi8=\">96. 不同的二叉搜索树</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9iZXN0LXRpbWUtdG8tYnV5LWFuZC1zZWxsLXN0b2NrL2Rlc2NyaXB0aW9uLw==\">121. 买卖股票的最佳时机</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy93b3JkLWJyZWFrLz9mYXZvcml0ZT0yY2t0a3Zq\">139. 单词拆分</span> <strong>★</strong></li>\n<li><del><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9tYXhpbXVtLXByb2R1Y3Qtc3ViYXJyYXkvZGVzY3JpcHRpb24vP2Zhdm9yaXRlPTJja3Rrdmo=\">152. 乘积最大子数组</span></del>（middle题，暂时跳过）</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9ob3VzZS1yb2JiZXIvZGVzY3JpcHRpb24v\">198. 打家劫舍</span></li>\n<li><del><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9ob3VzZS1yb2JiZXItaWlpL2Rlc2NyaXB0aW9uLz9mYXZvcml0ZT0yY2t0a3Zq\">337. 打家劫舍 III</span></del>（middle题，暂时跳过）</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9tYXhpbWFsLXNxdWFyZS9kZXNjcmlwdGlvbi8=\">221. 最大正方形</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9wZXJmZWN0LXNxdWFyZXMvZGVzY3JpcHRpb24v\">279. 完全平方数</span> <strong>★</strong></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9sb25nZXN0LWluY3JlYXNpbmctc3Vic2VxdWVuY2UvZGVzY3JpcHRpb24v\">300. 最长递增子序列</span> <strong>★</strong></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9iZXN0LXRpbWUtdG8tYnV5LWFuZC1zZWxsLXN0b2NrLXdpdGgtY29vbGRvd24vP2Zhdm9yaXRlPTJja3Rrdmo=\">309. 最佳买卖股票时机含冷冻期</span> <strong>★★★</strong></li>\n<li><del><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9idXJzdC1iYWxsb29ucy8/ZmF2b3JpdGU9MmNrdGt2ag==\">312. 戳气球</span></del>（hard题，暂时跳过）</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9jb2luLWNoYW5nZS9kZXNjcmlwdGlvbi8=\">322. 零钱兑换</span> <strong>★</strong></li>\n<li><del><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9wYXJ0aXRpb24tZXF1YWwtc3Vic2V0LXN1bS8/ZmF2b3JpdGU9MmNrdGt2ag==\">416. 分割等和子集</span></del>（middle题，暂时跳过）</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy90YXJnZXQtc3VtL2Rlc2NyaXB0aW9uLw==\">494. 目标和</span> <strong>★</strong></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9wYWxpbmRyb21pYy1zdWJzdHJpbmdzL2Rlc2NyaXB0aW9uLz9mYXZvcml0ZT0yY2t0a3Zq\">647. 回文子串</span> <strong>★★</strong></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9sb25nZXN0LXBhbGluZHJvbWljLXN1YnN0cmluZy9kZXNjcmlwdGlvbi8=\">5. 最长回文子串</span></li>\n</ul>\n<h3 id=\"十六、滑动窗口（共4题，含2道hard题）\"><a href=\"#十六、滑动窗口（共4题，含2道hard题）\" class=\"headerlink\" title=\"十六、滑动窗口（共4题，含2道hard题）\"></a>十六、滑动窗口（共4题，含2道hard题）</h3><ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9sb25nZXN0LXN1YnN0cmluZy13aXRob3V0LXJlcGVhdGluZy1jaGFyYWN0ZXJzL2Rlc2NyaXB0aW9uLw==\">3. 无重复字符的最长子串</span> <strong>★★★</strong></li>\n<li><del><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9taW5pbXVtLXdpbmRvdy1zdWJzdHJpbmcvZGVzY3JpcHRpb24vP2Zhdm9yaXRlPTJja3Rrdmo=\">76. 最小覆盖子串</span></del>（hard题，暂时跳过）</li>\n<li><del><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9zbGlkaW5nLXdpbmRvdy1tYXhpbXVtLz9mYXZvcml0ZT0yY2t0a3Zq\">239. 滑动窗口最大值</span></del>（hard题，暂时跳过）</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9maW5kLWFsbC1hbmFncmFtcy1pbi1hLXN0cmluZy9kZXNjcmlwdGlvbi8/ZmF2b3JpdGU9MmNrdGt2ag==\">438. 找到字符串中所有字母异位词</span> <strong>★</strong></li>\n</ul>\n<h3 id=\"十七、贪心（共1题）\"><a href=\"#十七、贪心（共1题）\" class=\"headerlink\" title=\"十七、贪心（共1题）\"></a>十七、贪心（共1题）</h3><ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9qdW1wLWdhbWUvZGVzY3JpcHRpb24v\">55. 跳跃游戏</span></li>\n</ul>\n<h3 id=\"十八、数学（共1题）\"><a href=\"#十八、数学（共1题）\" class=\"headerlink\" title=\"十八、数学（共1题）\"></a>十八、数学（共1题）</h3><ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9yb3RhdGUtaW1hZ2Uvc29sdXRpb25zLz9mYXZvcml0ZT0yY2t0a3Zq\">48. 旋转图像</span> <strong>★</strong></li>\n</ul>\n<h3 id=\"十九、其它（共2题，含1道力扣VIP专属题）\"><a href=\"#十九、其它（共2题，含1道力扣VIP专属题）\" class=\"headerlink\" title=\"十九、其它（共2题，含1道力扣VIP专属题）\"></a>十九、其它（共2题，含1道力扣VIP专属题）</h3><ul>\n<li><del><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9tZWV0aW5nLXJvb21zLWlpLz9mYXZvcml0ZT0yY2t0a3Zq\">253. 会议室 II</span></del>（力扣VIP专属题，暂时跳过）</li>\n<li><del><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy90YXNrLXNjaGVkdWxlci9zb2x1dGlvbnMvP2Zhdm9yaXRlPTJja3Rrdmo=\">621. 任务调度器</span></del>（middle题，暂时跳过）</li>\n</ul>\n<h2 id=\"以下middle题目我暂时跳过了，后面有精力再研究：\"><a href=\"#以下middle题目我暂时跳过了，后面有精力再研究：\" class=\"headerlink\" title=\"以下middle题目我暂时跳过了，后面有精力再研究：\"></a>以下middle题目我暂时跳过了，后面有精力再研究：</h2><ul>\n<li><ol start=\"406\">\n<li>根据身高重建队列</li>\n</ol>\n</li>\n<li><ol start=\"152\">\n<li>乘积最大子数组</li>\n</ol>\n</li>\n<li><ol start=\"416\">\n<li>分割等和子集</li>\n</ol>\n</li>\n<li><ol start=\"337\">\n<li>打家劫舍 III</li>\n</ol>\n</li>\n<li><ol start=\"581\">\n<li>最短无序连续子数组</li>\n</ol>\n</li>\n<li><ol start=\"253\">\n<li>会议室 II</li>\n</ol>\n</li>\n<li><ol start=\"621\">\n<li>任务调度器</li>\n</ol>\n</li>\n</ul>\n<h2 id=\"常见高频题：\"><a href=\"#常见高频题：\" class=\"headerlink\" title=\"常见高频题：\"></a>常见高频题：</h2><ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9tZXJnZS1zb3J0ZWQtYXJyYXkvZGVzY3JpcHRpb24v\">88. 合并两个有序数组</span>，倒序双指针，类似于 <a href=\"#21-%E5%90%88%E5%B9%B6%E4%B8%A4%E4%B8%AA%E6%9C%89%E5%BA%8F%E9%93%BE%E8%A1%A8\">21. 合并两个有序链表</a></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9jb21wcmVzcy1zdHJpbmctbGNjaS9kZXNjcmlwdGlvbi8=\">面试题 01.06. 字符串压缩</span>，类似于 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9zdHJpbmctY29tcHJlc3Npb24vZGVzY3JpcHRpb24v\">443. 压缩字符串</span></li>\n</ul>\n<hr>\n<p><strong>版权声明：</strong> 本文为博主原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接和本声明。</p>\n<p><strong>原文链接：</strong> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM3MTAyOTg0L2FydGljbGUvZGV0YWlscy8xMjg1NzYyODM=\">https://blog.csdn.net/qq_37102984/article/details/128576283</span> </p>\n",
            "tags": [
                "算法",
                "力扣",
                "LeetCode",
                "刷题"
            ]
        }
    ]
}