<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>杰克飞的博客 • Posts by &#34;算法&#34; tag</title>
        <link>https://120115.xyz</link>
        <description>一个用Hexo搭建的个人博客</description>
        <language>zh-CN</language>
        <pubDate>Fri, 01 Aug 2025 11:08:46 +0800</pubDate>
        <lastBuildDate>Fri, 01 Aug 2025 11:08:46 +0800</lastBuildDate>
        <category>ArrayList</category>
        <category>实现原理</category>
        <category>HashMap</category>
        <category>线程安全</category>
        <category>put方法</category>
        <category>HashSet</category>
        <category>HashTable</category>
        <category>AI</category>
        <category>Java</category>
        <category>LangChain4j</category>
        <category>实战教程</category>
        <category>游戏</category>
        <category>Steam</category>
        <category>Hexo</category>
        <category>博客</category>
        <category>八股</category>
        <category>牛客</category>
        <category>扩容</category>
        <category>算法</category>
        <category>力扣</category>
        <category>LeetCode</category>
        <category>刷题</category>
        <item>
            <guid isPermalink="true">https://120115.xyz/2025/08/01/leetcodeHot100%E5%88%B7%E9%A2%98%E6%96%B9%E5%BC%8F_%E7%AE%80%E6%B4%81%E7%89%88/</guid>
            <title>力扣算法Hot100刷题路线</title>
            <link>https://120115.xyz/2025/08/01/leetcodeHot100%E5%88%B7%E9%A2%98%E6%96%B9%E5%BC%8F_%E7%AE%80%E6%B4%81%E7%89%88/</link>
            <category>算法</category>
            <category>力扣</category>
            <category>LeetCode</category>
            <category>刷题</category>
            <pubDate>Fri, 01 Aug 2025 11:08:46 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;力扣算法Hot100刷题路线&#34;&gt;&lt;a href=&#34;#力扣算法Hot100刷题路线&#34; class=&#34;headerlink&#34; title=&#34;力扣算法Hot100刷题路线&#34;&gt;&lt;/a&gt;力扣算法Hot100刷题路线&lt;/h1&gt;&lt;h2 id=&#34;介绍&#34;&gt;&lt;a href=&#34;#介绍&#34; class=&#34;headerlink&#34; title=&#34;介绍&#34;&gt;&lt;/a&gt;介绍&lt;/h2&gt;&lt;p&gt;对于算法题，按题型类别刷题才会更有成效，因此我这里在网上搜索并参考了下 &lt;strong&gt;🔥 LeetCode 热题 HOT 100&lt;/strong&gt; 的题型归类，并在其基础上做了一定的完善，希望能够记录自己的刷题历程，有所收获！&lt;/p&gt;
&lt;h3 id=&#34;参考文章&#34;&gt;&lt;a href=&#34;#参考文章&#34; class=&#34;headerlink&#34; title=&#34;参考文章&#34;&gt;&lt;/a&gt;参考文章&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM3MTAyOTg0L2FydGljbGUvZGV0YWlscy8xMjg1NzYyODM=&#34;&gt;【热题】LeetCode 热题 HOT 100分类+题解&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM3MTAyOTg0L2FydGljbGUvZGV0YWlscy8xMjg1NzYyODM=&#34;&gt;leetcode HOT100总结&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM3MTAyOTg0L2FydGljbGUvZGV0YWlscy8xMjg1NzYyODM=&#34;&gt;leetcode算法总结 —— HOT 100分类整理&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;刷题说明&#34;&gt;&lt;a href=&#34;#刷题说明&#34; class=&#34;headerlink&#34; title=&#34;刷题说明&#34;&gt;&lt;/a&gt;刷题说明&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;我这里只做了LeetCode 热题 HOT 100中的 &lt;strong&gt;easy&lt;/strong&gt; 和 &lt;strong&gt;middle&lt;/strong&gt; 的题，&lt;strong&gt;hard&lt;/strong&gt; 的题难度较大暂时都跳过了（题目上都有 &lt;del&gt;删除线&lt;/del&gt; 标识），大部分面试也不会考察，后面有精力再做研究。&lt;/li&gt;
&lt;li&gt;题目后带有 &lt;strong&gt;★&lt;/strong&gt; 标识的表示后续还要继续反复练习，题目可能不难，但有时可能会忽略其中的一些刷题细节而导致错误&lt;/li&gt;
&lt;li&gt;每一种类型的题目，并不绝对是按照题号递增的顺序来排列的（当然大部分都是按题号大小排好序的）。&lt;/li&gt;
&lt;li&gt;因为有些题目其实很相似，放在一起更好，便单独对他们做了调整，比如 &lt;a href=&#34;#647-%E5%9B%9E%E6%96%87%E5%AD%90%E4%B8%B2&#34;&gt;647. 回文子串&lt;/a&gt; 和 &lt;a href=&#34;#5-%E6%9C%80%E9%95%BF%E5%9B%9E%E6%96%87%E5%AD%90%E4%B8%B2&#34;&gt;5. 最长回文子串&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;这里面的每一道题，都有相对应我自己日常整理的题解，具体可参考：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM3MTAyOTg0L2FydGljbGUvZGV0YWlscy8xMjg1NzYyODM=&#34;&gt;我的博客-LeetCode专栏题解&lt;/span&gt;，在里面搜对应题号即可 ~&lt;/li&gt;
&lt;li&gt;大家在浏览时，可以通过下方⬇️按题型分类汇总后的【目录】来实现快速跳转，更方便、更快捷的刷题。&lt;/li&gt;
&lt;li&gt;同时这篇文章我也是我花费了很长的时间，对比多篇文章来总结和编写的，希望对大家有所帮助。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;文章目录&#34;&gt;&lt;a href=&#34;#文章目录&#34; class=&#34;headerlink&#34; title=&#34;文章目录&#34;&gt;&lt;/a&gt;文章目录&lt;/h2&gt;&lt;h3 id=&#34;一、链表（共11题）&#34;&gt;&lt;a href=&#34;#一、链表（共11题）&#34; class=&#34;headerlink&#34; title=&#34;一、链表（共11题）&#34;&gt;&lt;/a&gt;一、链表（共11题）&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9hZGQtdHdvLW51bWJlcnMvZGVzY3JpcHRpb24v&#34;&gt;2. 两数相加&lt;/span&gt; &lt;strong&gt;★&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9yZW1vdmUtbnRoLW5vZGUtZnJvbS1lbmQtb2YtbGlzdC9kZXNjcmlwdGlvbi8=&#34;&gt;19. 删除链表的倒数第 N 个结点&lt;/span&gt; &lt;strong&gt;★&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9tZXJnZS10d28tc29ydGVkLWxpc3RzLz9mYXZvcml0ZT0yY2t0a3Zq&#34;&gt;21. 合并两个有序链表&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9tZXJnZS1rLXNvcnRlZC1saXN0cy9kZXNjcmlwdGlvbi8/ZmF2b3JpdGU9MmNrdGt2ag==&#34;&gt;23. 合并K个升序链表&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9saW5rZWQtbGlzdC1jeWNsZS8/ZmF2b3JpdGU9MmNrdGt2ag==&#34;&gt;141. 环形链表&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9saW5rZWQtbGlzdC1jeWNsZS1paS9kZXNjcmlwdGlvbi8/ZmF2b3JpdGU9MmNrdGt2ag==&#34;&gt;142. 环形链表 II&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9zb3J0LWxpc3QvZGVzY3JpcHRpb24v&#34;&gt;148. 排序链表&lt;/span&gt; &lt;strong&gt;★&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9pbnRlcnNlY3Rpb24tb2YtdHdvLWxpbmtlZC1saXN0cy8/ZmF2b3JpdGU9MmNrdGt2ag==&#34;&gt;160. 相交链表&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9yZXZlcnNlLWxpbmtlZC1saXN0L2Rlc2NyaXB0aW9uLw==&#34;&gt;206. 反转链表&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9wYWxpbmRyb21lLWxpbmtlZC1saXN0L2Rlc2NyaXB0aW9uLw==&#34;&gt;234. 回文链表&lt;/span&gt; &lt;strong&gt;★&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;del&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9xdWV1ZS1yZWNvbnN0cnVjdGlvbi1ieS1oZWlnaHQvP2Zhdm9yaXRlPTJja3Rrdmo=&#34;&gt;406. 根据身高重建队列&lt;/span&gt;&lt;/del&gt;（middle题，暂时跳过）&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;二、二叉树（共14题，含2道hard题）&#34;&gt;&lt;a href=&#34;#二、二叉树（共14题，含2道hard题）&#34; class=&#34;headerlink&#34; title=&#34;二、二叉树（共14题，含2道hard题）&#34;&gt;&lt;/a&gt;二、二叉树（共14题，含2道hard题）&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;做题心得：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;处理递归，核心就是千万不要想子问题的过程，你脑子能处理几层？马上就绕迷糊了。要想子问题的结果，思路就清晰了&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;是的，只要代码的边界条件和非边界条件的逻辑写对了，其他的事情交给数学归纳法就好了。也就是说，写对了这两个逻辑，你的代码自动就是正确的了，没必要想递归是怎么一层一层走的。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;跟树相关的题，一般有两种解法：递归&amp;amp;迭代：递归用dfs，而迭代用bfs（队列）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Go 语言的深度优先遍历算法可以采用闭包函数实现，这样省去了许多参数的传递与全局变量的声明。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9iaW5hcnktdHJlZS1pbm9yZGVyLXRyYXZlcnNhbC8/ZmF2b3JpdGU9MmNrdGt2ag==&#34;&gt;94. 二叉树的中序遍历&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy92YWxpZGF0ZS1iaW5hcnktc2VhcmNoLXRyZWUvP2Zhdm9yaXRlPTJja3Rrdmo=&#34;&gt;98. 验证二叉搜索树&lt;/span&gt; &lt;strong&gt;★★★&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9zeW1tZXRyaWMtdHJlZS9kZXNjcmlwdGlvbi8=&#34;&gt;101. 对称二叉树&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9iaW5hcnktdHJlZS1sZXZlbC1vcmRlci10cmF2ZXJzYWwvZGVzY3JpcHRpb24vP2Zhdm9yaXRlPTJja3Rrdmo=&#34;&gt;102. 二叉树的层序遍历&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9tYXhpbXVtLWRlcHRoLW9mLWJpbmFyeS10cmVlL2Rlc2NyaXB0aW9uLw==&#34;&gt;104. 二叉树的最大深度&lt;/span&gt; &lt;strong&gt;★&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9jb25zdHJ1Y3QtYmluYXJ5LXRyZWUtZnJvbS1wcmVvcmRlci1hbmQtaW5vcmRlci10cmF2ZXJzYWwvZGVzY3JpcHRpb24v&#34;&gt;105. 从前序与中序遍历序列构造二叉树&lt;/span&gt; &lt;strong&gt;★★★&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9mbGF0dGVuLWJpbmFyeS10cmVlLXRvLWxpbmtlZC1saXN0Lz9mYXZvcml0ZT0yY2t0a3Zq&#34;&gt;114. 二叉树展开为链表&lt;/span&gt; &lt;strong&gt;★★★&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;del&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9iaW5hcnktdHJlZS1tYXhpbXVtLXBhdGgtc3VtL2Rlc2NyaXB0aW9uLz9mYXZvcml0ZT0yY2t0a3Zq&#34;&gt;124. 二叉树中的最大路径和&lt;/span&gt;&lt;/del&gt;（hard题，暂时跳过）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9pbnZlcnQtYmluYXJ5LXRyZWUvZGVzY3JpcHRpb24vP2Zhdm9yaXRlPTJja3Rrdmo=&#34;&gt;226. 翻转二叉树&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9sb3dlc3QtY29tbW9uLWFuY2VzdG9yLW9mLWEtYmluYXJ5LXRyZWUvZGVzY3JpcHRpb24v&#34;&gt;236. 二叉树的最近公共祖先&lt;/span&gt; &lt;strong&gt;★&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;del&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9zZXJpYWxpemUtYW5kLWRlc2VyaWFsaXplLWJpbmFyeS10cmVlLz9mYXZvcml0ZT0yY2t0a3Zq&#34;&gt;297. 二叉树的序列化与反序列化&lt;/span&gt;&lt;/del&gt;（hard题，暂时跳过）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9jb252ZXJ0LWJzdC10by1ncmVhdGVyLXRyZWUvZGVzY3JpcHRpb24v&#34;&gt;538. 把二叉搜索树转换为累加树&lt;/span&gt; &lt;strong&gt;★&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9kaWFtZXRlci1vZi1iaW5hcnktdHJlZS9kZXNjcmlwdGlvbi8=&#34;&gt;543. 二叉树的直径&lt;/span&gt; &lt;strong&gt;★&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9tZXJnZS10d28tYmluYXJ5LXRyZWVzLz9mYXZvcml0ZT0yY2t0a3Zq&#34;&gt;617. 合并二叉树&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;新版 hot100 题目扩充（以下题目列表不断更新ing~）：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9jb252ZXJ0LXNvcnRlZC1hcnJheS10by1iaW5hcnktc2VhcmNoLXRyZWUvZGVzY3JpcHRpb24v&#34;&gt;LeetCode 108. 将有序数组转换为二叉搜索树&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;三、DFS-BFS（共6题，含3道hard题）&#34;&gt;&lt;a href=&#34;#三、DFS-BFS（共6题，含3道hard题）&#34; class=&#34;headerlink&#34; title=&#34;三、DFS&amp;#x2F;BFS（共6题，含3道hard题）&#34;&gt;&lt;/a&gt;三、DFS&amp;#x2F;BFS（共6题，含3道hard题）&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy93b3JkLXNlYXJjaC9kZXNjcmlwdGlvbi8=&#34;&gt;79. 单词搜索&lt;/span&gt; &lt;strong&gt;★&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;del&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9tYXhpbWFsLXJlY3RhbmdsZS8/ZmF2b3JpdGU9MmNrdGt2ag==&#34;&gt;85. 最大矩形&lt;/span&gt;&lt;/del&gt; （hard题，暂时跳过）&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9udW1iZXItb2YtaXNsYW5kcy9kZXNjcmlwdGlvbi8=&#34;&gt;200. 岛屿数量&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;del&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9jb3Vyc2Utc2NoZWR1bGUvP2Zhdm9yaXRlPTJja3Rrdmo=&#34;&gt;207. 课程表&lt;/span&gt;&lt;/del&gt; （hard题，暂时跳过）&lt;/li&gt;
&lt;li&gt;&lt;del&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9yZW1vdmUtaW52YWxpZC1wYXJlbnRoZXNlcy9kZXNjcmlwdGlvbi8/ZmF2b3JpdGU9MmNrdGt2ag==&#34;&gt;301. 删除无效的括号&lt;/span&gt;&lt;/del&gt; （hard题，暂时跳过）&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9wYXRoLXN1bS1paWkvc29sdXRpb25zLw==&#34;&gt;437. 路径总和 III&lt;/span&gt; &lt;strong&gt;★&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;四、递归-回溯（共6题，含1道hard题）&#34;&gt;&lt;a href=&#34;#四、递归-回溯（共6题，含1道hard题）&#34; class=&#34;headerlink&#34; title=&#34;四、递归&amp;#x2F;回溯（共6题，含1道hard题）&#34;&gt;&lt;/a&gt;四、递归&amp;#x2F;回溯（共6题，含1道hard题）&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9sZXR0ZXItY29tYmluYXRpb25zLW9mLWEtcGhvbmUtbnVtYmVyL2Rlc2NyaXB0aW9uLw==&#34;&gt;17. 电话号码的字母组合&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9nZW5lcmF0ZS1wYXJlbnRoZXNlcy9kZXNjcmlwdGlvbi8=&#34;&gt;22. 括号生成&lt;/span&gt; &lt;strong&gt;★&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9jb21iaW5hdGlvbi1zdW0vZGVzY3JpcHRpb24v&#34;&gt;39. 组合总和&lt;/span&gt; &lt;strong&gt;★&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9wZXJtdXRhdGlvbnMvP2Zhdm9yaXRlPTJja3Rrdmo=&#34;&gt;46. 全排列&lt;/span&gt; &lt;strong&gt;★&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9zdWJzZXRzL2Rlc2NyaXB0aW9uLw==&#34;&gt;78. 子集&lt;/span&gt; &lt;strong&gt;★&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;del&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9ldmFsdWF0ZS1kaXZpc2lvbi9kZXNjcmlwdGlvbi8/ZmF2b3JpdGU9MmNrdGt2ag==&#34;&gt;399. 除法求值&lt;/span&gt;&lt;/del&gt; （hard题，暂时跳过）&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;五、Hash表-map（共3题）&#34;&gt;&lt;a href=&#34;#五、Hash表-map（共3题）&#34; class=&#34;headerlink&#34; title=&#34;五、Hash表&amp;#x2F;map（共3题）&#34;&gt;&lt;/a&gt;五、Hash表&amp;#x2F;map（共3题）&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy90d28tc3VtL2Rlc2NyaXB0aW9uLw==&#34;&gt;1. 两数之和&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9ncm91cC1hbmFncmFtcy9kZXNjcmlwdGlvbi8=&#34;&gt;49. 字母异位词分组&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9sb25nZXN0LWNvbnNlY3V0aXZlLXNlcXVlbmNlL2Rlc2NyaXB0aW9uLz9mYXZvcml0ZT0yY2t0a3Zq&#34;&gt;128. 最长连续序列&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;六、位运算（共3题）&#34;&gt;&lt;a href=&#34;#六、位运算（共3题）&#34; class=&#34;headerlink&#34; title=&#34;六、位运算（共3题）&#34;&gt;&lt;/a&gt;六、位运算（共3题）&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9zaW5nbGUtbnVtYmVyL2Rlc2NyaXB0aW9uLw==&#34;&gt;136. 只出现一次的数字&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9jb3VudGluZy1iaXRzL2Rlc2NyaXB0aW9uLw==&#34;&gt;338. 比特位计数&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9oYW1taW5nLWRpc3RhbmNlL2Rlc2NyaXB0aW9uLw==&#34;&gt;461. 汉明距离&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;七、数组（共5题）&#34;&gt;&lt;a href=&#34;#七、数组（共5题）&#34; class=&#34;headerlink&#34; title=&#34;七、数组（共5题）&#34;&gt;&lt;/a&gt;七、数组（共5题）&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;del&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy8zc3VtL2Rlc2NyaXB0aW9uLz9mYXZvcml0ZT0yY2t0a3Zq&#34;&gt;15. 三数之和&lt;/span&gt;&lt;/del&gt; 待研究&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9uZXh0LXBlcm11dGF0aW9uL2Rlc2NyaXB0aW9uLw==&#34;&gt;31. 下一个排列&lt;/span&gt; &lt;strong&gt;★★★&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9tYWpvcml0eS1lbGVtZW50L2Rlc2NyaXB0aW9uLw==&#34;&gt;169. 多数元素&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9wcm9kdWN0LW9mLWFycmF5LWV4Y2VwdC1zZWxmL2Rlc2NyaXB0aW9uLw==&#34;&gt;238. 除自身以外数组的乘积&lt;/span&gt; &lt;strong&gt;★&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9maW5kLWFsbC1udW1iZXJzLWRpc2FwcGVhcmVkLWluLWFuLWFycmF5L2Rlc2NyaXB0aW9uLw==&#34;&gt;448. 找到所有数组中消失的数字&lt;/span&gt; &lt;strong&gt;★&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;八、二分查找（共5题，含1道hard题）&#34;&gt;&lt;a href=&#34;#八、二分查找（共5题，含1道hard题）&#34; class=&#34;headerlink&#34; title=&#34;八、二分查找（共5题，含1道hard题）&#34;&gt;&lt;/a&gt;八、二分查找（共5题，含1道hard题）&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9tZWRpYW4tb2YtdHdvLXNvcnRlZC1hcnJheXMvZGVzY3JpcHRpb24v&#34;&gt;4. 寻找两个正序数组的中位数&lt;/span&gt; （hard题）&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9zZWFyY2gtaW4tcm90YXRlZC1zb3J0ZWQtYXJyYXkvZGVzY3JpcHRpb24v&#34;&gt;33. 搜索旋转排序数组&lt;/span&gt; &lt;strong&gt;★&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9maW5kLWZpcnN0LWFuZC1sYXN0LXBvc2l0aW9uLW9mLWVsZW1lbnQtaW4tc29ydGVkLWFycmF5L2Rlc2NyaXB0aW9uLw==&#34;&gt;34. 在排序数组中查找元素的第一个和最后一个位置&lt;/span&gt; &lt;strong&gt;★★&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9zZWFyY2gtYS0yZC1tYXRyaXgtaWkvZGVzY3JpcHRpb24vP2Zhdm9yaXRlPTJja3Rrdmo=&#34;&gt;240. 搜索二维矩阵 II&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9maW5kLXRoZS1kdXBsaWNhdGUtbnVtYmVyL2Rlc2NyaXB0aW9uLw==&#34;&gt;287. 寻找重复数&lt;/span&gt; &lt;strong&gt;★★&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;新版 hot100 题目扩充（以下题目列表不断更新ing~）：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9zZWFyY2gtaW5zZXJ0LXBvc2l0aW9uL2Rlc2NyaXB0aW9uLw==&#34;&gt;LeetCode 35. 搜索插入位置&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;九、双指针-三指针（共3题）&#34;&gt;&lt;a href=&#34;#九、双指针-三指针（共3题）&#34; class=&#34;headerlink&#34; title=&#34;九、双指针&amp;#x2F;三指针（共3题）&#34;&gt;&lt;/a&gt;九、双指针&amp;#x2F;三指针（共3题）&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9jb250YWluZXItd2l0aC1tb3N0LXdhdGVyL2Rlc2NyaXB0aW9uLw==&#34;&gt;11. 盛最多水的容器&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9zb3J0LWNvbG9ycy9kZXNjcmlwdGlvbi8=&#34;&gt;75. 颜色分类&lt;/span&gt; &lt;strong&gt;★★&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9tb3ZlLXplcm9lcy9kZXNjcmlwdGlvbi8=&#34;&gt;283. 移动零&lt;/span&gt; &lt;strong&gt;★&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;十、栈-单调栈（共6题，含2道hard题）&#34;&gt;&lt;a href=&#34;#十、栈-单调栈（共6题，含2道hard题）&#34; class=&#34;headerlink&#34; title=&#34;十、栈&amp;#x2F;单调栈（共6题，含2道hard题）&#34;&gt;&lt;/a&gt;十、栈&amp;#x2F;单调栈（共6题，含2道hard题）&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy92YWxpZC1wYXJlbnRoZXNlcy9kZXNjcmlwdGlvbi8=&#34;&gt;20. 有效的括号&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;del&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy90cmFwcGluZy1yYWluLXdhdGVyLz9mYXZvcml0ZT0yY2t0a3Zq&#34;&gt;42. 接雨水&lt;/span&gt;&lt;/del&gt; （hard题，暂时跳过）&lt;/li&gt;
&lt;li&gt;&lt;del&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9sYXJnZXN0LXJlY3RhbmdsZS1pbi1oaXN0b2dyYW0vP2Zhdm9yaXRlPTJja3Rrdmo=&#34;&gt;84. 柱状图中最大的矩形&lt;/span&gt;&lt;/del&gt; （hard题，暂时跳过）&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9taW4tc3RhY2svZGVzY3JpcHRpb24v&#34;&gt;155. 最小栈&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9kZWNvZGUtc3RyaW5nL2Rlc2NyaXB0aW9uLw==&#34;&gt;394. 字符串解码&lt;/span&gt; &lt;strong&gt;★★&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9kYWlseS10ZW1wZXJhdHVyZXMvZGVzY3JpcHRpb24v&#34;&gt;739. 每日温度&lt;/span&gt; &lt;strong&gt;★&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;十一、排序（共4题）&#34;&gt;&lt;a href=&#34;#十一、排序（共4题）&#34; class=&#34;headerlink&#34; title=&#34;十一、排序（共4题）&#34;&gt;&lt;/a&gt;十一、排序（共4题）&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9tZXJnZS1pbnRlcnZhbHMvZGVzY3JpcHRpb24vP2Zhdm9yaXRlPTJja3Rrdmo=&#34;&gt;56. 合并区间&lt;/span&gt; &lt;strong&gt;★&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9rdGgtbGFyZ2VzdC1lbGVtZW50LWluLWFuLWFycmF5L2Rlc2NyaXB0aW9uLw==&#34;&gt;215. 数组中的第K个最大元素&lt;/span&gt; &lt;strong&gt;★★★&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy90b3Atay1mcmVxdWVudC1lbGVtZW50cy9kZXNjcmlwdGlvbi8=&#34;&gt;347. 前 K 个高频元素&lt;/span&gt; &lt;strong&gt;★&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;del&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9zaG9ydGVzdC11bnNvcnRlZC1jb250aW51b3VzLXN1YmFycmF5L2Rlc2NyaXB0aW9uLz9mYXZvcml0ZT0yY2t0a3Zq&#34;&gt;581. 最短无序连续子数组&lt;/span&gt;&lt;/del&gt;（middle题，暂时跳过）&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;十二、前缀和（共1题）&#34;&gt;&lt;a href=&#34;#十二、前缀和（共1题）&#34; class=&#34;headerlink&#34; title=&#34;十二、前缀和（共1题）&#34;&gt;&lt;/a&gt;十二、前缀和（共1题）&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9zdWJhcnJheS1zdW0tZXF1YWxzLWsvZGVzY3JpcHRpb24v&#34;&gt;560. 和为 K 的子数组&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;十三、字典树-前缀树（共1题）&#34;&gt;&lt;a href=&#34;#十三、字典树-前缀树（共1题）&#34; class=&#34;headerlink&#34; title=&#34;十三、字典树&amp;#x2F;前缀树（共1题）&#34;&gt;&lt;/a&gt;十三、字典树&amp;#x2F;前缀树（共1题）&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9pbXBsZW1lbnQtdHJpZS1wcmVmaXgtdHJlZS9kZXNjcmlwdGlvbi8=&#34;&gt;208. 实现 Trie (前缀树)&lt;/span&gt; &lt;strong&gt;★★★&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;十四、LRU缓存（共1题）&#34;&gt;&lt;a href=&#34;#十四、LRU缓存（共1题）&#34; class=&#34;headerlink&#34; title=&#34;十四、LRU缓存（共1题）&#34;&gt;&lt;/a&gt;十四、LRU缓存（共1题）&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9scnUtY2FjaGUvP2Zhdm9yaXRlPTJja3Rrdmo=&#34;&gt;146. LRU 缓存&lt;/span&gt; &lt;strong&gt;★★★&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;十五、动态规划（共23题，含6道hard题）&#34;&gt;&lt;a href=&#34;#十五、动态规划（共23题，含6道hard题）&#34; class=&#34;headerlink&#34; title=&#34;十五、动态规划（共23题，含6道hard题）&#34;&gt;&lt;/a&gt;十五、动态规划（共23题，含6道hard题）&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;del&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9yZWd1bGFyLWV4cHJlc3Npb24tbWF0Y2hpbmcvZGVzY3JpcHRpb24vP2Zhdm9yaXRlPTJja3Rrdmo=&#34;&gt;10. 正则表达式匹配&lt;/span&gt;&lt;/del&gt;（hard题，暂时跳过）&lt;/li&gt;
&lt;li&gt;&lt;del&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9sb25nZXN0LXZhbGlkLXBhcmVudGhlc2VzL2Rlc2NyaXB0aW9uLz9mYXZvcml0ZT0yY2t0a3Zq&#34;&gt;32. 最长有效括号&lt;/span&gt;&lt;/del&gt;（hard题，暂时跳过）&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9tYXhpbXVtLXN1YmFycmF5L2Rlc2NyaXB0aW9uLw==&#34;&gt;53. 最大子数组和&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy91bmlxdWUtcGF0aHMvZGVzY3JpcHRpb24v&#34;&gt;62. 不同路径&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9taW5pbXVtLXBhdGgtc3VtLz9mYXZvcml0ZT0yY2t0a3Zq&#34;&gt;64. 最小路径和&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9jbGltYmluZy1zdGFpcnMvZGVzY3JpcHRpb24v&#34;&gt;70. 爬楼梯&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;del&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9lZGl0LWRpc3RhbmNlLz9mYXZvcml0ZT0yY2t0a3Zq&#34;&gt;72. 编辑距离&lt;/span&gt;&lt;/del&gt;（hard题，暂时跳过）&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy91bmlxdWUtYmluYXJ5LXNlYXJjaC10cmVlcy9kZXNjcmlwdGlvbi8=&#34;&gt;96. 不同的二叉搜索树&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9iZXN0LXRpbWUtdG8tYnV5LWFuZC1zZWxsLXN0b2NrL2Rlc2NyaXB0aW9uLw==&#34;&gt;121. 买卖股票的最佳时机&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy93b3JkLWJyZWFrLz9mYXZvcml0ZT0yY2t0a3Zq&#34;&gt;139. 单词拆分&lt;/span&gt; &lt;strong&gt;★&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;del&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9tYXhpbXVtLXByb2R1Y3Qtc3ViYXJyYXkvZGVzY3JpcHRpb24vP2Zhdm9yaXRlPTJja3Rrdmo=&#34;&gt;152. 乘积最大子数组&lt;/span&gt;&lt;/del&gt;（middle题，暂时跳过）&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9ob3VzZS1yb2JiZXIvZGVzY3JpcHRpb24v&#34;&gt;198. 打家劫舍&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;del&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9ob3VzZS1yb2JiZXItaWlpL2Rlc2NyaXB0aW9uLz9mYXZvcml0ZT0yY2t0a3Zq&#34;&gt;337. 打家劫舍 III&lt;/span&gt;&lt;/del&gt;（middle题，暂时跳过）&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9tYXhpbWFsLXNxdWFyZS9kZXNjcmlwdGlvbi8=&#34;&gt;221. 最大正方形&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9wZXJmZWN0LXNxdWFyZXMvZGVzY3JpcHRpb24v&#34;&gt;279. 完全平方数&lt;/span&gt; &lt;strong&gt;★&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9sb25nZXN0LWluY3JlYXNpbmctc3Vic2VxdWVuY2UvZGVzY3JpcHRpb24v&#34;&gt;300. 最长递增子序列&lt;/span&gt; &lt;strong&gt;★&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9iZXN0LXRpbWUtdG8tYnV5LWFuZC1zZWxsLXN0b2NrLXdpdGgtY29vbGRvd24vP2Zhdm9yaXRlPTJja3Rrdmo=&#34;&gt;309. 最佳买卖股票时机含冷冻期&lt;/span&gt; &lt;strong&gt;★★★&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;del&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9idXJzdC1iYWxsb29ucy8/ZmF2b3JpdGU9MmNrdGt2ag==&#34;&gt;312. 戳气球&lt;/span&gt;&lt;/del&gt;（hard题，暂时跳过）&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9jb2luLWNoYW5nZS9kZXNjcmlwdGlvbi8=&#34;&gt;322. 零钱兑换&lt;/span&gt; &lt;strong&gt;★&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;del&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9wYXJ0aXRpb24tZXF1YWwtc3Vic2V0LXN1bS8/ZmF2b3JpdGU9MmNrdGt2ag==&#34;&gt;416. 分割等和子集&lt;/span&gt;&lt;/del&gt;（middle题，暂时跳过）&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy90YXJnZXQtc3VtL2Rlc2NyaXB0aW9uLw==&#34;&gt;494. 目标和&lt;/span&gt; &lt;strong&gt;★&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9wYWxpbmRyb21pYy1zdWJzdHJpbmdzL2Rlc2NyaXB0aW9uLz9mYXZvcml0ZT0yY2t0a3Zq&#34;&gt;647. 回文子串&lt;/span&gt; &lt;strong&gt;★★&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9sb25nZXN0LXBhbGluZHJvbWljLXN1YnN0cmluZy9kZXNjcmlwdGlvbi8=&#34;&gt;5. 最长回文子串&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;十六、滑动窗口（共4题，含2道hard题）&#34;&gt;&lt;a href=&#34;#十六、滑动窗口（共4题，含2道hard题）&#34; class=&#34;headerlink&#34; title=&#34;十六、滑动窗口（共4题，含2道hard题）&#34;&gt;&lt;/a&gt;十六、滑动窗口（共4题，含2道hard题）&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9sb25nZXN0LXN1YnN0cmluZy13aXRob3V0LXJlcGVhdGluZy1jaGFyYWN0ZXJzL2Rlc2NyaXB0aW9uLw==&#34;&gt;3. 无重复字符的最长子串&lt;/span&gt; &lt;strong&gt;★★★&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;del&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9taW5pbXVtLXdpbmRvdy1zdWJzdHJpbmcvZGVzY3JpcHRpb24vP2Zhdm9yaXRlPTJja3Rrdmo=&#34;&gt;76. 最小覆盖子串&lt;/span&gt;&lt;/del&gt;（hard题，暂时跳过）&lt;/li&gt;
&lt;li&gt;&lt;del&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9zbGlkaW5nLXdpbmRvdy1tYXhpbXVtLz9mYXZvcml0ZT0yY2t0a3Zq&#34;&gt;239. 滑动窗口最大值&lt;/span&gt;&lt;/del&gt;（hard题，暂时跳过）&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9maW5kLWFsbC1hbmFncmFtcy1pbi1hLXN0cmluZy9kZXNjcmlwdGlvbi8/ZmF2b3JpdGU9MmNrdGt2ag==&#34;&gt;438. 找到字符串中所有字母异位词&lt;/span&gt; &lt;strong&gt;★&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;十七、贪心（共1题）&#34;&gt;&lt;a href=&#34;#十七、贪心（共1题）&#34; class=&#34;headerlink&#34; title=&#34;十七、贪心（共1题）&#34;&gt;&lt;/a&gt;十七、贪心（共1题）&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9qdW1wLWdhbWUvZGVzY3JpcHRpb24v&#34;&gt;55. 跳跃游戏&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;十八、数学（共1题）&#34;&gt;&lt;a href=&#34;#十八、数学（共1题）&#34; class=&#34;headerlink&#34; title=&#34;十八、数学（共1题）&#34;&gt;&lt;/a&gt;十八、数学（共1题）&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9yb3RhdGUtaW1hZ2Uvc29sdXRpb25zLz9mYXZvcml0ZT0yY2t0a3Zq&#34;&gt;48. 旋转图像&lt;/span&gt; &lt;strong&gt;★&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;十九、其它（共2题，含1道力扣VIP专属题）&#34;&gt;&lt;a href=&#34;#十九、其它（共2题，含1道力扣VIP专属题）&#34; class=&#34;headerlink&#34; title=&#34;十九、其它（共2题，含1道力扣VIP专属题）&#34;&gt;&lt;/a&gt;十九、其它（共2题，含1道力扣VIP专属题）&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;del&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9tZWV0aW5nLXJvb21zLWlpLz9mYXZvcml0ZT0yY2t0a3Zq&#34;&gt;253. 会议室 II&lt;/span&gt;&lt;/del&gt;（力扣VIP专属题，暂时跳过）&lt;/li&gt;
&lt;li&gt;&lt;del&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy90YXNrLXNjaGVkdWxlci9zb2x1dGlvbnMvP2Zhdm9yaXRlPTJja3Rrdmo=&#34;&gt;621. 任务调度器&lt;/span&gt;&lt;/del&gt;（middle题，暂时跳过）&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;以下middle题目我暂时跳过了，后面有精力再研究：&#34;&gt;&lt;a href=&#34;#以下middle题目我暂时跳过了，后面有精力再研究：&#34; class=&#34;headerlink&#34; title=&#34;以下middle题目我暂时跳过了，后面有精力再研究：&#34;&gt;&lt;/a&gt;以下middle题目我暂时跳过了，后面有精力再研究：&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;ol start=&#34;406&#34;&gt;
&lt;li&gt;根据身高重建队列&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;ol start=&#34;152&#34;&gt;
&lt;li&gt;乘积最大子数组&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;ol start=&#34;416&#34;&gt;
&lt;li&gt;分割等和子集&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;ol start=&#34;337&#34;&gt;
&lt;li&gt;打家劫舍 III&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;ol start=&#34;581&#34;&gt;
&lt;li&gt;最短无序连续子数组&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;ol start=&#34;253&#34;&gt;
&lt;li&gt;会议室 II&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;ol start=&#34;621&#34;&gt;
&lt;li&gt;任务调度器&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;常见高频题：&#34;&gt;&lt;a href=&#34;#常见高频题：&#34; class=&#34;headerlink&#34; title=&#34;常见高频题：&#34;&gt;&lt;/a&gt;常见高频题：&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9tZXJnZS1zb3J0ZWQtYXJyYXkvZGVzY3JpcHRpb24v&#34;&gt;88. 合并两个有序数组&lt;/span&gt;，倒序双指针，类似于 &lt;a href=&#34;#21-%E5%90%88%E5%B9%B6%E4%B8%A4%E4%B8%AA%E6%9C%89%E5%BA%8F%E9%93%BE%E8%A1%A8&#34;&gt;21. 合并两个有序链表&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9jb21wcmVzcy1zdHJpbmctbGNjaS9kZXNjcmlwdGlvbi8=&#34;&gt;面试题 01.06. 字符串压缩&lt;/span&gt;，类似于 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9zdHJpbmctY29tcHJlc3Npb24vZGVzY3JpcHRpb24v&#34;&gt;443. 压缩字符串&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;版权声明：&lt;/strong&gt; 本文为博主原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接和本声明。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;原文链接：&lt;/strong&gt; &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM3MTAyOTg0L2FydGljbGUvZGV0YWlscy8xMjg1NzYyODM=&#34;&gt;https://blog.csdn.net/qq_37102984/article/details/128576283&lt;/span&gt; &lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://120115.xyz/2025/08/01/leetcodeHot100%E5%88%B7%E9%A2%98%E6%96%B9%E5%BC%8F_%E6%95%B4%E7%90%86%E7%89%88/</guid>
            <title>力扣算法Hot100刷题路线</title>
            <link>https://120115.xyz/2025/08/01/leetcodeHot100%E5%88%B7%E9%A2%98%E6%96%B9%E5%BC%8F_%E6%95%B4%E7%90%86%E7%89%88/</link>
            <category>算法</category>
            <category>力扣</category>
            <category>LeetCode</category>
            <category>刷题</category>
            <pubDate>Fri, 01 Aug 2025 10:49:40 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;力扣算法Hot100刷题路线&#34;&gt;&lt;a href=&#34;#力扣算法Hot100刷题路线&#34; class=&#34;headerlink&#34; title=&#34;力扣算法Hot100刷题路线&#34;&gt;&lt;/a&gt;力扣算法Hot100刷题路线&lt;/h1&gt;&lt;h2 id=&#34;介绍&#34;&gt;&lt;a href=&#34;#介绍&#34; class=&#34;headerlink&#34; title=&#34;介绍&#34;&gt;&lt;/a&gt;介绍&lt;/h2&gt;&lt;p&gt;对于算法题，按题型类别刷题才会更有成效，因此我这里在网上搜索并参考了下 &lt;strong&gt;🔥 LeetCode 热题 HOT 100&lt;/strong&gt; 的题型归类，并在其基础上做了一定的完善，希望能够记录自己的刷题历程，有所收获！&lt;/p&gt;
&lt;h3 id=&#34;参考文章&#34;&gt;&lt;a href=&#34;#参考文章&#34; class=&#34;headerlink&#34; title=&#34;参考文章&#34;&gt;&lt;/a&gt;参考文章&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM3MTAyOTg0L2FydGljbGUvZGV0YWlscy8xMjg1NzYyODM=&#34;&gt;【热题】LeetCode 热题 HOT 100分类+题解&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM3MTAyOTg0L2FydGljbGUvZGV0YWlscy8xMjg1NzYyODM=&#34;&gt;leetcode HOT100总结&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM3MTAyOTg0L2FydGljbGUvZGV0YWlscy8xMjg1NzYyODM=&#34;&gt;leetcode算法总结 —— HOT 100分类整理&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;刷题说明&#34;&gt;&lt;a href=&#34;#刷题说明&#34; class=&#34;headerlink&#34; title=&#34;刷题说明&#34;&gt;&lt;/a&gt;刷题说明&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;我这里只做了LeetCode 热题 HOT 100中的 &lt;strong&gt;easy&lt;/strong&gt; 和 &lt;strong&gt;middle&lt;/strong&gt; 的题，&lt;strong&gt;hard&lt;/strong&gt; 的题难度较大暂时都跳过了（题目上都有 &lt;del&gt;删除线&lt;/del&gt; 标识），大部分面试也不会考察，后面有精力再做研究。&lt;/li&gt;
&lt;li&gt;题目后带有 &lt;strong&gt;★&lt;/strong&gt; 标识的表示后续还要继续反复练习，题目可能不难，但有时可能会忽略其中的一些刷题细节而导致错误&lt;/li&gt;
&lt;li&gt;每一种类型的题目，并不绝对是按照题号递增的顺序来排列的（当然大部分都是按题号大小排好序的）。&lt;/li&gt;
&lt;li&gt;因为有些题目其实很相似，放在一起更好，便单独对他们做了调整，比如 &lt;a href=&#34;#647-%E5%9B%9E%E6%96%87%E5%AD%90%E4%B8%B2&#34;&gt;647. 回文子串&lt;/a&gt; 和 &lt;a href=&#34;#5-%E6%9C%80%E9%95%BF%E5%9B%9E%E6%96%87%E5%AD%90%E4%B8%B2&#34;&gt;5. 最长回文子串&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;这里面的每一道题，都有相对应我自己日常整理的题解，具体可参考：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM3MTAyOTg0L2FydGljbGUvZGV0YWlscy8xMjg1NzYyODM=&#34;&gt;我的博客-LeetCode专栏题解&lt;/span&gt;，在里面搜对应题号即可 ~&lt;/li&gt;
&lt;li&gt;大家在浏览时，可以通过下方⬇️按题型分类汇总后的【目录】来实现快速跳转，更方便、更快捷的刷题。&lt;/li&gt;
&lt;li&gt;同时这篇文章我也是我花费了很长的时间，对比多篇文章来总结和编写的，希望对大家有所帮助。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;文章目录&#34;&gt;&lt;a href=&#34;#文章目录&#34; class=&#34;headerlink&#34; title=&#34;文章目录&#34;&gt;&lt;/a&gt;文章目录&lt;/h2&gt;&lt;h3 id=&#34;一、链表（共11题）&#34;&gt;&lt;a href=&#34;#一、链表（共11题）&#34; class=&#34;headerlink&#34; title=&#34;一、链表（共11题）&#34;&gt;&lt;/a&gt;一、链表（共11题）&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9hZGQtdHdvLW51bWJlcnMvZGVzY3JpcHRpb24v&#34;&gt;2. 两数相加&lt;/span&gt; &lt;strong&gt;★&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9yZW1vdmUtbnRoLW5vZGUtZnJvbS1lbmQtb2YtbGlzdC9kZXNjcmlwdGlvbi8=&#34;&gt;19. 删除链表的倒数第 N 个结点&lt;/span&gt; &lt;strong&gt;★&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9tZXJnZS10d28tc29ydGVkLWxpc3RzLz9mYXZvcml0ZT0yY2t0a3Zq&#34;&gt;21. 合并两个有序链表&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9tZXJnZS1rLXNvcnRlZC1saXN0cy9kZXNjcmlwdGlvbi8/ZmF2b3JpdGU9MmNrdGt2ag==&#34;&gt;23. 合并K个升序链表&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9saW5rZWQtbGlzdC1jeWNsZS8/ZmF2b3JpdGU9MmNrdGt2ag==&#34;&gt;141. 环形链表&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9saW5rZWQtbGlzdC1jeWNsZS1paS9kZXNjcmlwdGlvbi8/ZmF2b3JpdGU9MmNrdGt2ag==&#34;&gt;142. 环形链表 II&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9zb3J0LWxpc3QvZGVzY3JpcHRpb24v&#34;&gt;148. 排序链表&lt;/span&gt; &lt;strong&gt;★&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9pbnRlcnNlY3Rpb24tb2YtdHdvLWxpbmtlZC1saXN0cy8/ZmF2b3JpdGU9MmNrdGt2ag==&#34;&gt;160. 相交链表&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9yZXZlcnNlLWxpbmtlZC1saXN0L2Rlc2NyaXB0aW9uLw==&#34;&gt;206. 反转链表&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9wYWxpbmRyb21lLWxpbmtlZC1saXN0L2Rlc2NyaXB0aW9uLw==&#34;&gt;234. 回文链表&lt;/span&gt; &lt;strong&gt;★&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;del&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9xdWV1ZS1yZWNvbnN0cnVjdGlvbi1ieS1oZWlnaHQvP2Zhdm9yaXRlPTJja3Rrdmo=&#34;&gt;406. 根据身高重建队列&lt;/span&gt;&lt;/del&gt;（middle题，暂时跳过）&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;详细题解&#34;&gt;&lt;a href=&#34;#详细题解&#34; class=&#34;headerlink&#34; title=&#34;详细题解&#34;&gt;&lt;/a&gt;详细题解&lt;/h2&gt;&lt;h3 id=&#34;一、链表（共11题）-1&#34;&gt;&lt;a href=&#34;#一、链表（共11题）-1&#34; class=&#34;headerlink&#34; title=&#34;一、链表（共11题）&#34;&gt;&lt;/a&gt;一、链表（共11题）&lt;/h3&gt;&lt;h4 id=&#34;2-两数相加-★&#34;&gt;&lt;a href=&#34;#2-两数相加-★&#34; class=&#34;headerlink&#34; title=&#34;2. 两数相加 ★&#34;&gt;&lt;/a&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9hZGQtdHdvLW51bWJlcnMvZGVzY3JpcHRpb24v&#34;&gt;2. 两数相加&lt;/span&gt; &lt;strong&gt;★&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;注意分别处理 【相同数位上的两数之和 val1 + val2，并加上上一轮新产生的进位值 carry：sum &amp;#x3D; val1 + val2 + carry】 与 【这一轮新产生的进位值 carry &amp;#x3D; carry &amp;#x2F; 10】。&lt;/p&gt;
&lt;p&gt;并且当两链表 l1 和 l2 都遍历完后，记得额外处理最后的一次进位。例如：99+9&amp;#x3D;108，这里需要单独处理百位最后的1。&lt;/p&gt;
&lt;h4 id=&#34;19-删除链表的倒数第-N-个结点-★&#34;&gt;&lt;a href=&#34;#19-删除链表的倒数第-N-个结点-★&#34; class=&#34;headerlink&#34; title=&#34;19. 删除链表的倒数第 N 个结点 ★&#34;&gt;&lt;/a&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9yZW1vdmUtbnRoLW5vZGUtZnJvbS1lbmQtb2YtbGlzdC9kZXNjcmlwdGlvbi8=&#34;&gt;19. 删除链表的倒数第 N 个结点&lt;/span&gt; &lt;strong&gt;★&lt;/strong&gt;&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;注意 先创建虚拟头节点 dummy，且 dummy.Next &amp;#x3D; head。防止当链表头节点head为待删除节点时，删除该节点后链表头head为空的情况（边界情况）&lt;/li&gt;
&lt;li&gt;如果我们能得到倒数第n个节点的前驱节点而不是倒数第n个节点，那么删除操作会更加方便。因此我们可以考虑在初始时创建 快慢指针 fast和 slow，并将这两个指针指向哑节点 dummy，其余操作不变。这样一来，当 fast遍历到链表末尾时，slow的下一个节点就是我们需要删除的节点。&lt;/li&gt;
&lt;li&gt;快指针先走n步，然后快指针和慢指针再每次各走一步&lt;/li&gt;
&lt;li&gt;删除倒数第n个节点：slow.Next &amp;#x3D; slow.Next.Next，注意不是 slow.Next &amp;#x3D; fast&lt;/li&gt;
&lt;li&gt;最后返回虚拟头节点的后继节点：dummy.Next&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;类似题目有：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9kZWxldGUtbm9kZS1pbi1hLWxpbmtlZC1saXN0L2Rlc2NyaXB0aW9uLw==&#34;&gt;237. 删除链表中的节点&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9zaGFuLWNodS1saWFuLWJpYW8tZGUtamllLWRpYW4tbGNvZi9kZXNjcmlwdGlvbi8=&#34;&gt;剑指 Offer 18. 删除链表的节点&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;21-合并两个有序链表&#34;&gt;&lt;a href=&#34;#21-合并两个有序链表&#34; class=&#34;headerlink&#34; title=&#34;21. 合并两个有序链表&#34;&gt;&lt;/a&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9tZXJnZS10d28tc29ydGVkLWxpc3RzLz9mYXZvcml0ZT0yY2t0a3Zq&#34;&gt;21. 合并两个有序链表&lt;/span&gt;&lt;/h4&gt;&lt;p&gt;两种方法：递归 和 迭代 。&lt;/p&gt;
&lt;h4 id=&#34;23-合并K个升序链表&#34;&gt;&lt;a href=&#34;#23-合并K个升序链表&#34; class=&#34;headerlink&#34; title=&#34;23. 合并K个升序链表&#34;&gt;&lt;/a&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9tZXJnZS1rLXNvcnRlZC1saXN0cy9kZXNjcmlwdGlvbi8/ZmF2b3JpdGU9MmNrdGt2ag==&#34;&gt;23. 合并K个升序链表&lt;/span&gt;&lt;/h4&gt;&lt;p&gt;在 &lt;a href=&#34;#21-%E5%90%88%E5%B9%B6%E4%B8%A4%E4%B8%AA%E6%9C%89%E5%BA%8F%E9%93%BE%E8%A1%A8&#34;&gt;21. 合并两个有序链表&lt;/a&gt; 的基础上，使用&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;递归法（推荐，时间复杂度更优）&lt;/strong&gt;，参考 LeetCode题解-分治法&lt;ul&gt;
&lt;li&gt;时间复杂度：O(nlog⁡k)，其中 k 为 lists 的长度，n 为所有链表的节点数之和。每个节点参与链表合并的次数为 O(log⁡k) 次，一共有 n 个节点，所以总的时间复杂度为 O(nlog⁡k)。&lt;/li&gt;
&lt;li&gt;空间复杂度：O(log⁡k) 递归深度为 O(log⁡k)，需要用到 O(log⁡k)的栈空间。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;迭代法（不推荐，时间复杂度较高）&lt;/strong&gt;：遍历链表数组，两两合并。&lt;ul&gt;
&lt;li&gt;时间复杂度 O(nk)，时间复杂度高于递归法&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;有两个细节需要特别注意：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;在方法 mergeKLists()中，初始化链表时，采用如下写法：&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight go&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; res *ListNode&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// res := &amp;amp;ListNode&amp;#123;&amp;#125; // 错误写法，会初始化res为0值，导致结果集多一个0值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i := &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(lists); i++ &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    res = mergeTwoLists(res, lists[i])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;而在方法 mergeTwoLists()中，初始化虚拟节点 head时，则为：&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight go&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// var head *ListNode // 错误写法 会空指针异常&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;head := &amp;amp;ListNode&amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cur := head&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; head.Next&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h4 id=&#34;141-环形链表&#34;&gt;&lt;a href=&#34;#141-环形链表&#34; class=&#34;headerlink&#34; title=&#34;141. 环形链表&#34;&gt;&lt;/a&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9saW5rZWQtbGlzdC1jeWNsZS8/ZmF2b3JpdGU9MmNrdGt2ag==&#34;&gt;141. 环形链表&lt;/span&gt;&lt;/h4&gt;&lt;p&gt;判断快慢指针是否相遇（快指针两步，慢指针一步）&lt;/p&gt;
&lt;h4 id=&#34;142-环形链表-II&#34;&gt;&lt;a href=&#34;#142-环形链表-II&#34; class=&#34;headerlink&#34; title=&#34;142. 环形链表 II&#34;&gt;&lt;/a&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9saW5rZWQtbGlzdC1jeWNsZS1paS9kZXNjcmlwdGlvbi8/ZmF2b3JpdGU9MmNrdGt2ag==&#34;&gt;142. 环形链表 II&lt;/span&gt;&lt;/h4&gt;&lt;p&gt;先判断快慢指针是否相遇（快指针两步，慢指针一步），若相遇则将快指针重置到头结点，然后快慢指针每次各走一步，直至相遇&lt;/p&gt;
&lt;h4 id=&#34;148-排序链表-★&#34;&gt;&lt;a href=&#34;#148-排序链表-★&#34; class=&#34;headerlink&#34; title=&#34;148. 排序链表 ★&#34;&gt;&lt;/a&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9zb3J0LWxpc3QvZGVzY3JpcHRpb24v&#34;&gt;148. 排序链表&lt;/span&gt; &lt;strong&gt;★&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;题目要求时间复杂度为：O(NlogN)，故采用归并排序的思想（拆分→排序→合并）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;先通过快慢指针找到链表中点，并切割为前后两部分&lt;/li&gt;
&lt;li&gt;不断递归上述过程，直至最终将链表切割为多个长度为1的链表&lt;/li&gt;
&lt;li&gt;最后不断合并这多个长度为1的链表（此比较大小并合并的过程，与 &lt;a href=&#34;#21-%E5%90%88%E5%B9%B6%E4%B8%A4%E4%B8%AA%E6%9C%89%E5%BA%8F%E9%93%BE%E8%A1%A8&#34;&gt;21. 合并两个有序链表&lt;/a&gt; 一样）&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;160-相交链表&#34;&gt;&lt;a href=&#34;#160-相交链表&#34; class=&#34;headerlink&#34; title=&#34;160. 相交链表&#34;&gt;&lt;/a&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9pbnRlcnNlY3Rpb24tb2YtdHdvLWxpbmtlZC1saXN0cy8/ZmF2b3JpdGU9MmNrdGt2ag==&#34;&gt;160. 相交链表&lt;/span&gt;&lt;/h4&gt;&lt;p&gt;用双指针pA 、pB分别遍历两个链表，pA对链表A遍历结束后就去遍历链表B，pB对链表B遍历结束后就遍历链表A。当 pA &amp;#x3D;&amp;#x3D; pB 时，相遇节点即为交点，因为两个指针分别移动的步数是一样的。&lt;/p&gt;
&lt;h4 id=&#34;206-反转链表&#34;&gt;&lt;a href=&#34;#206-反转链表&#34; class=&#34;headerlink&#34; title=&#34;206. 反转链表&#34;&gt;&lt;/a&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9yZXZlcnNlLWxpbmtlZC1saXN0L2Rlc2NyaXB0aW9uLw==&#34;&gt;206. 反转链表&lt;/span&gt;&lt;/h4&gt;&lt;p&gt;注意go中要用该方式初始化 &lt;code&gt;var pre, mid, end *ListNode = nil, head, nil&lt;/code&gt;，而不是 &lt;code&gt;pre, mid, end := &amp;amp;ListNode&amp;#123;&amp;#125;, head, &amp;amp;ListNode&amp;#123;&amp;#125;&lt;/code&gt;，否则会在反转后的尾节点添加值为0的 “空节点”，导致错误&lt;/p&gt;
&lt;p&gt;类似题目：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9yZXZlcnNlLWxpbmtlZC1saXN0LWlpL2Rlc2NyaXB0aW9uLw==&#34;&gt;92. 反转链表 II&lt;/span&gt;，反转指定区间内的链表&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9yZXZlcnNlLW5vZGVzLWluLWstZ3JvdXAvZGVzY3JpcHRpb24v&#34;&gt;25. K 个一组翻转链表&lt;/span&gt;，虽然是困难题，但是也是常考的高频题&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;234-回文链表-★&#34;&gt;&lt;a href=&#34;#234-回文链表-★&#34; class=&#34;headerlink&#34; title=&#34;234. 回文链表 ★&#34;&gt;&lt;/a&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9wYWxpbmRyb21lLWxpbmtlZC1saXN0L2Rlc2NyaXB0aW9uLw==&#34;&gt;234. 回文链表&lt;/span&gt; &lt;strong&gt;★&lt;/strong&gt;&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;先通过快慢指针找链表中点，划分为前半部分和后半部分；注意寻找链表中点时的判断条件：&lt;code&gt;for fast.Next != nil &amp;amp;&amp;amp; fast.Next.Next != nil &amp;#123;...&amp;#125;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;再反转后半部分链表；&lt;/li&gt;
&lt;li&gt;最后将两部分链表的节点逐个比较&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;406-根据身高重建队列（middle题，暂时跳过）&#34;&gt;&lt;a href=&#34;#406-根据身高重建队列（middle题，暂时跳过）&#34; class=&#34;headerlink&#34; title=&#34;406. 根据身高重建队列（middle题，暂时跳过）&#34;&gt;&lt;/a&gt;&lt;del&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9xdWV1ZS1yZWNvbnN0cnVjdGlvbi1ieS1oZWlnaHQvP2Zhdm9yaXRlPTJja3Rrdmo=&#34;&gt;406. 根据身高重建队列&lt;/span&gt;&lt;/del&gt;（middle题，暂时跳过）&lt;/h4&gt;&lt;h3 id=&#34;二、二叉树（共14题，含2道hard题）&#34;&gt;&lt;a href=&#34;#二、二叉树（共14题，含2道hard题）&#34; class=&#34;headerlink&#34; title=&#34;二、二叉树（共14题，含2道hard题）&#34;&gt;&lt;/a&gt;二、二叉树（共14题，含2道hard题）&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;做题心得：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;处理递归，核心就是千万不要想子问题的过程，你脑子能处理几层？马上就绕迷糊了。要想子问题的结果，思路就清晰了&lt;/li&gt;
&lt;li&gt;是的，只要代码的边界条件和非边界条件的逻辑写对了，其他的事情交给数学归纳法就好了。也就是说，写对了这两个逻辑，你的代码自动就是正确的了，没必要想递归是怎么一层一层走的。&lt;/li&gt;
&lt;li&gt;跟树相关的题，一般有两种解法：递归&amp;amp;迭代：递归用dfs，而迭代用bfs（队列）&lt;/li&gt;
&lt;li&gt;Go 语言的深度优先遍历算法可以采用闭包函数实现，这样省去了许多参数的传递与全局变量的声明。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;另外，关于递归，看到该题讨论区有一个评论，对于递归的理解很有帮助，特意截图留念。&lt;/p&gt;
&lt;h4 id=&#34;94-二叉树的中序遍历&#34;&gt;&lt;a href=&#34;#94-二叉树的中序遍历&#34; class=&#34;headerlink&#34; title=&#34;94. 二叉树的中序遍历&#34;&gt;&lt;/a&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9iaW5hcnktdHJlZS1pbm9yZGVyLXRyYXZlcnNhbC8/ZmF2b3JpdGU9MmNrdGt2ag==&#34;&gt;94. 二叉树的中序遍历&lt;/span&gt;&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;递归 or 迭代（利用栈的先进后出特性），必会&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;类似题目：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9iaW5hcnktdHJlZS1wcmVvcmRlci10cmF2ZXJzYWwvZGVzY3JpcHRpb24v&#34;&gt;144. 二叉树的前序遍历&lt;/span&gt; 利用栈，类似于中序遍历&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9iaW5hcnktdHJlZS1wb3N0b3JkZXItdHJhdmVyc2FsL2Rlc2NyaXB0aW9uLw==&#34;&gt;145. 二叉树的后序遍历&lt;/span&gt; 利用栈，有一个标记根节点的flagMap，用来标记第几次经过某个根节点root，只有第二次经过某个根节点时，才存储其结果，并将其出栈置空。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;98-验证二叉搜索树-★★★&#34;&gt;&lt;a href=&#34;#98-验证二叉搜索树-★★★&#34; class=&#34;headerlink&#34; title=&#34;98. 验证二叉搜索树 ★★★&#34;&gt;&lt;/a&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy92YWxpZGF0ZS1iaW5hcnktc2VhcmNoLXRyZWUvP2Zhdm9yaXRlPTJja3Rrdmo=&#34;&gt;98. 验证二叉搜索树&lt;/span&gt; &lt;strong&gt;★★★&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;利用二叉搜索树的中序遍历为升序序列这一性质，来递归验证。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;方法一：&lt;/strong&gt; 官方题解 通过限制每个子树中的上下界（lower和upper）来判断，需额外引入常量：math.MinInt64, math.MaxInt64，不推荐，也没必要。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;方法二：&lt;/strong&gt; 双指针比较法（pre和node），参考 B站视频题解，不需额外引入常量，而只需通过一个pre指针，在向上回溯的过程中，不断保存之前的节点用于比较。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;首先【不断向左子树递归】直至最后空节点：&lt;code&gt;left := dfs(node.Left)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;然后再自底向上【回溯】的过程中，pre每次保存的都是之前上一层栈空间中的根节点，并不断将当前node节点和pre节点的值做比较：&lt;code&gt;if pre != nil &amp;amp;&amp;amp; node.Val &amp;lt;= pre.Val &amp;#123; return false &amp;#125;&lt;/code&gt;&lt;ul&gt;
&lt;li&gt;当 node &amp;#x3D; root 时，pre &amp;#x3D; root.Left，pre的值应永远小于node的值（满足二叉搜索树中，左子节点值 &amp;lt; 根节点值）&lt;/li&gt;
&lt;li&gt;当 node &amp;#x3D; root.Right时，pre &amp;#x3D; root，pre的值应永远小于node的值（满足二叉搜索树中，根节点值 &amp;lt; 右子节点值）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;保存当前节点node到pre中，用于下层递归中做比较&lt;/li&gt;
&lt;li&gt;然后不断向右子树递归：&lt;code&gt;right := dfs(node.Right)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;最后返回：&lt;code&gt;return left &amp;amp;&amp;amp; right&lt;/code&gt;，判断当前节点的左右子树是否分别是二叉搜索树&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;101-对称二叉树&#34;&gt;&lt;a href=&#34;#101-对称二叉树&#34; class=&#34;headerlink&#34; title=&#34;101. 对称二叉树&#34;&gt;&lt;/a&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9zeW1tZXRyaWMtdHJlZS9kZXNjcmlwdGlvbi8=&#34;&gt;101. 对称二叉树&lt;/span&gt;&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;解法1 递归：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;if 左节点和右节点均为空，说明遍历完了，返回 true&lt;/li&gt;
&lt;li&gt;否则说明左右两个节点并非同时为空，那么判断：if 左节点和右节点其中一个为空（也就是一个为空，一个非空，那肯定不对称），或者左节点值不等于右节点值（不对称），返回 false&lt;/li&gt;
&lt;li&gt;最后继续递归下探：&lt;br&gt;&lt;code&gt;return recur(左节点的左子节点，右节点的右子节点) &amp;amp;&amp;amp; recur(左节点的右子节点，右节点的左子节点)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;解法2 迭代：&lt;/strong&gt;&lt;br&gt;层序遍历：通过队列来判断根节点的左子树和右子树的内侧和外侧是否相等，其中的条件判断和递归的逻辑是一样的。&lt;/p&gt;
&lt;h4 id=&#34;102-二叉树的层序遍历&#34;&gt;&lt;a href=&#34;#102-二叉树的层序遍历&#34; class=&#34;headerlink&#34; title=&#34;102. 二叉树的层序遍历&#34;&gt;&lt;/a&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9iaW5hcnktdHJlZS1sZXZlbC1vcmRlci10cmF2ZXJzYWwvZGVzY3JpcHRpb24vP2Zhdm9yaXRlPTJja3Rrdmo=&#34;&gt;102. 二叉树的层序遍历&lt;/span&gt;&lt;/h4&gt;&lt;p&gt;BFS层序遍历使用 queue 队列（先进先出）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;初始化队列，并将非空根节点 root入队&lt;/li&gt;
&lt;li&gt;判断队列大小是否非零，非零则进入外层for循环 &lt;code&gt;for len(queue) &amp;gt; 0 &amp;#123;&lt;/code&gt;&lt;ul&gt;
&lt;li&gt;由于需要按层返回二维数组结果集，因此要提前缓存当前这一层的节点数 &lt;code&gt;length := len(queue)&lt;/code&gt;，并创建用于保存这一层结果的临时数组 subRes。&lt;/li&gt;
&lt;li&gt;进入内循环 &lt;code&gt;for i := 0; i &amp;lt; length; i++ &amp;#123;&lt;/code&gt;&lt;ul&gt;
&lt;li&gt;获取队头节点 root &amp;#x3D; queue[0]，将其 root.Val值保存到临时数组 subRes中，再将该节点出队（它的使命已完成）&lt;/li&gt;
&lt;li&gt;将 root的非空左子节点 root.Left和非空右子节点 root.Right入队&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;将保存当前这一层结果集的临时数组 subRes追加到二维数组 res中&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;返回保存最终结果集的二维数组 res&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;104-二叉树的最大深度-★&#34;&gt;&lt;a href=&#34;#104-二叉树的最大深度-★&#34; class=&#34;headerlink&#34; title=&#34;104. 二叉树的最大深度 ★&#34;&gt;&lt;/a&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9tYXhpbXVtLWRlcHRoLW9mLWJpbmFyeS10cmVlL2Rlc2NyaXB0aW9uLw==&#34;&gt;104. 二叉树的最大深度&lt;/span&gt; &lt;strong&gt;★&lt;/strong&gt;&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;递归法（dfs）&lt;/li&gt;
&lt;li&gt;迭代法（bfs）：利用队列（先进先出）。内层for循环保留上一层节点数，避免内层循环因为对queue进行append操作，导致队列元素个数发生变化&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;105-从前序与中序遍历序列构造二叉树-★★★&#34;&gt;&lt;a href=&#34;#105-从前序与中序遍历序列构造二叉树-★★★&#34; class=&#34;headerlink&#34; title=&#34;105. 从前序与中序遍历序列构造二叉树 ★★★&#34;&gt;&lt;/a&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9jb25zdHJ1Y3QtYmluYXJ5LXRyZWUtZnJvbS1wcmVvcmRlci1hbmQtaW5vcmRlci10cmF2ZXJzYWwvZGVzY3JpcHRpb24v&#34;&gt;105. 从前序与中序遍历序列构造二叉树&lt;/span&gt; &lt;strong&gt;★★★&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;推荐掌握递归法，迭代法比较难理解，不过都需要作图理解和推敲：左右子树分别在 前序&amp;#x2F;中序 遍历中的左右边界。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;递归法：&lt;/strong&gt;&lt;br&gt;先通过遍历inorder数组，找到根节点（值为preorder[0]）位于中序遍历中的下标位置 i。然后，根据中序遍历中根节点的下标位置 i，分别构建root的左右子树 …&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;分别确定”左子树”在前序和中序遍历中的左右边界&lt;ul&gt;
&lt;li&gt;确定前序遍历中左子树的左右边界：&lt;ul&gt;
&lt;li&gt;root &amp;#x3D; preorder[0]是根节点，所以前序遍历中左子树的左边界是1；&lt;/li&gt;
&lt;li&gt;然后根据根节点在中序遍历中的下标 i，可知【中序遍历中左子树的范围是0~ i】，由此可确定中序遍历中左子树的长度是 i（其实 i 的值也等于 len(inorder[:i])，但为了便于理解及简化代码量，就使用 i 来作为左子树的长度），又因为前序遍历中左子树的左边界为1，所以可得前序遍历中左子树的右边界为：i+1（或 len(inorder[:i])+1）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;确定中序遍历中左子树的左右边界：由上面的分析中的【中序遍历中左子树的范围是0~ i】可得：inorder[:i]&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;最后可得：&lt;code&gt;root.Left = buildTree(preorder[1:i+1], inorder[:i])&lt;/code&gt;&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;分别确定”右子树”在前序和中序遍历中的左右边界&lt;ul&gt;
&lt;li&gt;确定前序遍历中右子树的左右边界：&lt;ul&gt;
&lt;li&gt;由 1.1 可知当前左子树的长度是 i（其实 i 的值也等于 len(inorder[:i])，但为了便于理解及简化代码量，就使用 i 来作为左子树的长度），且根节点也占一个位置，因此可得前序遍历中右子树的左边界为：i+1（或 len(inorder[:i])+1），右子树右边界一直到preorder末尾&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;确定中序遍历中右子树的左右边界：&lt;ul&gt;
&lt;li&gt;由于之前已经找出根节点位于中序遍历中的下标位置是 i，所以 i+1就是中序遍历中右子树的左边界，右边界一直到inorder末尾&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;最后可得：&lt;code&gt;root.Right = buildTree(preorder[i+1:], inorder[i+1:])&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;迭代法：&lt;/strong&gt;&lt;br&gt;preorder第一个元素为root，在inorder里面找到root，在它之前的为左子树（长l1），之后为右子树（长l2）。preorder[1]到preorder[l1]为左子树,之后为右子树，分别递归。&lt;/p&gt;
&lt;p&gt;主要难点在于需要分别确定前序遍历和中序遍历中的左右子树的左右边界对应关系。&lt;/p&gt;
&lt;h4 id=&#34;114-二叉树展开为链表-★★★&#34;&gt;&lt;a href=&#34;#114-二叉树展开为链表-★★★&#34; class=&#34;headerlink&#34; title=&#34;114. 二叉树展开为链表 ★★★&#34;&gt;&lt;/a&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9mbGF0dGVuLWJpbmFyeS10cmVlLXRvLWxpbmtlZC1saXN0Lz9mYXZvcml0ZT0yY2t0a3Zq&#34;&gt;114. 二叉树展开为链表&lt;/span&gt; &lt;strong&gt;★★★&lt;/strong&gt;&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;方法1：&lt;/strong&gt; 先前序遍历 获得各节点被访问到的顺序，然后更新每个节点的左右子节点的信息，将二叉树展开为单链表。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;方法2：&lt;/strong&gt; 没理解这个递归逻辑，继续研究&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;124-二叉树中的最大路径和（hard题，暂时跳过）&#34;&gt;&lt;a href=&#34;#124-二叉树中的最大路径和（hard题，暂时跳过）&#34; class=&#34;headerlink&#34; title=&#34;124. 二叉树中的最大路径和（hard题，暂时跳过）&#34;&gt;&lt;/a&gt;&lt;del&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9iaW5hcnktdHJlZS1tYXhpbXVtLXBhdGgtc3VtL2Rlc2NyaXB0aW9uLz9mYXZvcml0ZT0yY2t0a3Zq&#34;&gt;124. 二叉树中的最大路径和&lt;/span&gt;&lt;/del&gt;（hard题，暂时跳过）&lt;/h4&gt;&lt;h4 id=&#34;226-翻转二叉树&#34;&gt;&lt;a href=&#34;#226-翻转二叉树&#34; class=&#34;headerlink&#34; title=&#34;226. 翻转二叉树&#34;&gt;&lt;/a&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9pbnZlcnQtYmluYXJ5LXRyZWUvZGVzY3JpcHRpb24vP2Zhdm9yaXRlPTJja3Rrdmo=&#34;&gt;226. 翻转二叉树&lt;/span&gt;&lt;/h4&gt;&lt;h4 id=&#34;236-二叉树的最近公共祖先-★&#34;&gt;&lt;a href=&#34;#236-二叉树的最近公共祖先-★&#34; class=&#34;headerlink&#34; title=&#34;236. 二叉树的最近公共祖先 ★&#34;&gt;&lt;/a&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9sb3dlc3QtY29tbW9uLWFuY2VzdG9yLW9mLWEtYmluYXJ5LXRyZWUvZGVzY3JpcHRpb24v&#34;&gt;236. 二叉树的最近公共祖先&lt;/span&gt; &lt;strong&gt;★&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;求最小公共祖先，需要从底向上遍历。那么二叉树 只能通过后序遍历（即：回溯）实现从底向上的遍历方式。&lt;/p&gt;
&lt;h4 id=&#34;297-二叉树的序列化与反序列化（hard题，暂时跳过）&#34;&gt;&lt;a href=&#34;#297-二叉树的序列化与反序列化（hard题，暂时跳过）&#34; class=&#34;headerlink&#34; title=&#34;297. 二叉树的序列化与反序列化（hard题，暂时跳过）&#34;&gt;&lt;/a&gt;&lt;del&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9zZXJpYWxpemUtYW5kLWRlc2VyaWFsaXplLWJpbmFyeS10cmVlLz9mYXZvcml0ZT0yY2t0a3Zq&#34;&gt;297. 二叉树的序列化与反序列化&lt;/span&gt;&lt;/del&gt;（hard题，暂时跳过）&lt;/h4&gt;&lt;h4 id=&#34;538-把二叉搜索树转换为累加树-★&#34;&gt;&lt;a href=&#34;#538-把二叉搜索树转换为累加树-★&#34; class=&#34;headerlink&#34; title=&#34;538. 把二叉搜索树转换为累加树 ★&#34;&gt;&lt;/a&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9jb252ZXJ0LWJzdC10by1ncmVhdGVyLXRyZWUvZGVzY3JpcHRpb24v&#34;&gt;538. 把二叉搜索树转换为累加树&lt;/span&gt; &lt;strong&gt;★&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;以 反中序遍历（右中左）的方式不断累加并更新每个节点值即可&lt;/p&gt;
&lt;h4 id=&#34;543-二叉树的直径-★&#34;&gt;&lt;a href=&#34;#543-二叉树的直径-★&#34; class=&#34;headerlink&#34; title=&#34;543. 二叉树的直径 ★&#34;&gt;&lt;/a&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9kaWFtZXRlci1vZi1iaW5hcnktdHJlZS9kZXNjcmlwdGlvbi8=&#34;&gt;543. 二叉树的直径&lt;/span&gt; &lt;strong&gt;★&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;【前序遍历】思想：任意一条路径均可以被看作由某个节点为起点，从其左儿子和右儿子向下遍历的路径拼接得到。&lt;/p&gt;
&lt;h4 id=&#34;617-合并二叉树&#34;&gt;&lt;a href=&#34;#617-合并二叉树&#34; class=&#34;headerlink&#34; title=&#34;617. 合并二叉树&#34;&gt;&lt;/a&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9tZXJnZS10d28tYmluYXJ5LXRyZWVzLz9mYXZvcml0ZT0yY2t0a3Zq&#34;&gt;617. 合并二叉树&lt;/span&gt;&lt;/h4&gt;&lt;p&gt;可用两种方式操作树：原地修改 or 新建树&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;新版 hot100 题目扩充（以下题目列表不断更新ing~）：&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&#34;LeetCode-108-将有序数组转换为二叉搜索树&#34;&gt;&lt;a href=&#34;#LeetCode-108-将有序数组转换为二叉搜索树&#34; class=&#34;headerlink&#34; title=&#34;LeetCode 108. 将有序数组转换为二叉搜索树&#34;&gt;&lt;/a&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9jb252ZXJ0LXNvcnRlZC1hcnJheS10by1iaW5hcnktc2VhcmNoLXRyZWUvZGVzY3JpcHRpb24v&#34;&gt;LeetCode 108. 将有序数组转换为二叉搜索树&lt;/span&gt;&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;二叉搜索树BST 的【中序遍历】是升序的，因此本题等同于根据中序遍历的序列恢复二叉搜索树&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;虽然我们可以以升序序列中的任一个元素作为根节点&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;但是因为本题要求【高度平衡】，因此我们需要选择升序序列的【中间元素】作为根节点奥～&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9iaW5hcnktdHJlZS1pbm9yZGVyLXRyYXZlcnNhbC8/ZmF2b3JpdGU9MmNrdGt2ag==&#34;&gt;94. 二叉树的中序遍历&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy92YWxpZGF0ZS1iaW5hcnktc2VhcmNoLXRyZWUvP2Zhdm9yaXRlPTJja3Rrdmo=&#34;&gt;98. 验证二叉搜索树&lt;/span&gt; &lt;strong&gt;★★★&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9zeW1tZXRyaWMtdHJlZS9kZXNjcmlwdGlvbi8=&#34;&gt;101. 对称二叉树&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9iaW5hcnktdHJlZS1sZXZlbC1vcmRlci10cmF2ZXJzYWwvZGVzY3JpcHRpb24vP2Zhdm9yaXRlPTJja3Rrdmo=&#34;&gt;102. 二叉树的层序遍历&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9tYXhpbXVtLWRlcHRoLW9mLWJpbmFyeS10cmVlL2Rlc2NyaXB0aW9uLw==&#34;&gt;104. 二叉树的最大深度&lt;/span&gt; &lt;strong&gt;★&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9jb25zdHJ1Y3QtYmluYXJ5LXRyZWUtZnJvbS1wcmVvcmRlci1hbmQtaW5vcmRlci10cmF2ZXJzYWwvZGVzY3JpcHRpb24v&#34;&gt;105. 从前序与中序遍历序列构造二叉树&lt;/span&gt; &lt;strong&gt;★★★&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9mbGF0dGVuLWJpbmFyeS10cmVlLXRvLWxpbmtlZC1saXN0Lz9mYXZvcml0ZT0yY2t0a3Zq&#34;&gt;114. 二叉树展开为链表&lt;/span&gt; &lt;strong&gt;★★★&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;del&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9iaW5hcnktdHJlZS1tYXhpbXVtLXBhdGgtc3VtL2Rlc2NyaXB0aW9uLz9mYXZvcml0ZT0yY2t0a3Zq&#34;&gt;124. 二叉树中的最大路径和&lt;/span&gt;&lt;/del&gt;（hard题，暂时跳过）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9pbnZlcnQtYmluYXJ5LXRyZWUvZGVzY3JpcHRpb24vP2Zhdm9yaXRlPTJja3Rrdmo=&#34;&gt;226. 翻转二叉树&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9sb3dlc3QtY29tbW9uLWFuY2VzdG9yLW9mLWEtYmluYXJ5LXRyZWUvZGVzY3JpcHRpb24v&#34;&gt;236. 二叉树的最近公共祖先&lt;/span&gt; &lt;strong&gt;★&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;del&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9zZXJpYWxpemUtYW5kLWRlc2VyaWFsaXplLWJpbmFyeS10cmVlLz9mYXZvcml0ZT0yY2t0a3Zq&#34;&gt;297. 二叉树的序列化与反序列化&lt;/span&gt;&lt;/del&gt;（hard题，暂时跳过）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9jb252ZXJ0LWJzdC10by1ncmVhdGVyLXRyZWUvZGVzY3JpcHRpb24v&#34;&gt;538. 把二叉搜索树转换为累加树&lt;/span&gt; &lt;strong&gt;★&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9kaWFtZXRlci1vZi1iaW5hcnktdHJlZS9kZXNjcmlwdGlvbi8=&#34;&gt;543. 二叉树的直径&lt;/span&gt; &lt;strong&gt;★&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9tZXJnZS10d28tYmluYXJ5LXRyZWVzLz9mYXZvcml0ZT0yY2t0a3Zq&#34;&gt;617. 合并二叉树&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;新版 hot100 题目扩充（以下题目列表不断更新ing~）：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9jb252ZXJ0LXNvcnRlZC1hcnJheS10by1iaW5hcnktc2VhcmNoLXRyZWUvZGVzY3JpcHRpb24v&#34;&gt;LeetCode 108. 将有序数组转换为二叉搜索树&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;三、DFS-BFS（共6题，含3道hard题）&#34;&gt;&lt;a href=&#34;#三、DFS-BFS（共6题，含3道hard题）&#34; class=&#34;headerlink&#34; title=&#34;三、DFS&amp;#x2F;BFS（共6题，含3道hard题）&#34;&gt;&lt;/a&gt;三、DFS&amp;#x2F;BFS（共6题，含3道hard题）&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy93b3JkLXNlYXJjaC9kZXNjcmlwdGlvbi8=&#34;&gt;79. 单词搜索&lt;/span&gt; &lt;strong&gt;★&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;del&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9tYXhpbWFsLXJlY3RhbmdsZS8/ZmF2b3JpdGU9MmNrdGt2ag==&#34;&gt;85. 最大矩形&lt;/span&gt;&lt;/del&gt; （hard题，暂时跳过）&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9udW1iZXItb2YtaXNsYW5kcy9kZXNjcmlwdGlvbi8=&#34;&gt;200. 岛屿数量&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;del&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9jb3Vyc2Utc2NoZWR1bGUvP2Zhdm9yaXRlPTJja3Rrdmo=&#34;&gt;207. 课程表&lt;/span&gt;&lt;/del&gt; （hard题，暂时跳过）&lt;/li&gt;
&lt;li&gt;&lt;del&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9yZW1vdmUtaW52YWxpZC1wYXJlbnRoZXNlcy9kZXNjcmlwdGlvbi8/ZmF2b3JpdGU9MmNrdGt2ag==&#34;&gt;301. 删除无效的括号&lt;/span&gt;&lt;/del&gt; （hard题，暂时跳过）&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9wYXRoLXN1bS1paWkvc29sdXRpb25zLw==&#34;&gt;437. 路径总和 III&lt;/span&gt; &lt;strong&gt;★&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;四、递归-回溯（共6题，含1道hard题）&#34;&gt;&lt;a href=&#34;#四、递归-回溯（共6题，含1道hard题）&#34; class=&#34;headerlink&#34; title=&#34;四、递归&amp;#x2F;回溯（共6题，含1道hard题）&#34;&gt;&lt;/a&gt;四、递归&amp;#x2F;回溯（共6题，含1道hard题）&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9sZXR0ZXItY29tYmluYXRpb25zLW9mLWEtcGhvbmUtbnVtYmVyL2Rlc2NyaXB0aW9uLw==&#34;&gt;17. 电话号码的字母组合&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9nZW5lcmF0ZS1wYXJlbnRoZXNlcy9kZXNjcmlwdGlvbi8=&#34;&gt;22. 括号生成&lt;/span&gt; &lt;strong&gt;★&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9jb21iaW5hdGlvbi1zdW0vZGVzY3JpcHRpb24v&#34;&gt;39. 组合总和&lt;/span&gt; &lt;strong&gt;★&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9wZXJtdXRhdGlvbnMvP2Zhdm9yaXRlPTJja3Rrdmo=&#34;&gt;46. 全排列&lt;/span&gt; &lt;strong&gt;★&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9zdWJzZXRzL2Rlc2NyaXB0aW9uLw==&#34;&gt;78. 子集&lt;/span&gt; &lt;strong&gt;★&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;del&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9ldmFsdWF0ZS1kaXZpc2lvbi9kZXNjcmlwdGlvbi8/ZmF2b3JpdGU9MmNrdGt2ag==&#34;&gt;399. 除法求值&lt;/span&gt;&lt;/del&gt; （hard题，暂时跳过）&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;五、Hash表-map（共3题）&#34;&gt;&lt;a href=&#34;#五、Hash表-map（共3题）&#34; class=&#34;headerlink&#34; title=&#34;五、Hash表&amp;#x2F;map（共3题）&#34;&gt;&lt;/a&gt;五、Hash表&amp;#x2F;map（共3题）&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy90d28tc3VtL2Rlc2NyaXB0aW9uLw==&#34;&gt;1. 两数之和&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9ncm91cC1hbmFncmFtcy9kZXNjcmlwdGlvbi8=&#34;&gt;49. 字母异位词分组&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9sb25nZXN0LWNvbnNlY3V0aXZlLXNlcXVlbmNlL2Rlc2NyaXB0aW9uLz9mYXZvcml0ZT0yY2t0a3Zq&#34;&gt;128. 最长连续序列&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;六、位运算（共3题）&#34;&gt;&lt;a href=&#34;#六、位运算（共3题）&#34; class=&#34;headerlink&#34; title=&#34;六、位运算（共3题）&#34;&gt;&lt;/a&gt;六、位运算（共3题）&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9zaW5nbGUtbnVtYmVyL2Rlc2NyaXB0aW9uLw==&#34;&gt;136. 只出现一次的数字&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9jb3VudGluZy1iaXRzL2Rlc2NyaXB0aW9uLw==&#34;&gt;338. 比特位计数&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9oYW1taW5nLWRpc3RhbmNlL2Rlc2NyaXB0aW9uLw==&#34;&gt;461. 汉明距离&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;七、数组（共5题）&#34;&gt;&lt;a href=&#34;#七、数组（共5题）&#34; class=&#34;headerlink&#34; title=&#34;七、数组（共5题）&#34;&gt;&lt;/a&gt;七、数组（共5题）&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;del&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy8zc3VtL2Rlc2NyaXB0aW9uLz9mYXZvcml0ZT0yY2t0a3Zq&#34;&gt;15. 三数之和&lt;/span&gt;&lt;/del&gt; 待研究&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9uZXh0LXBlcm11dGF0aW9uL2Rlc2NyaXB0aW9uLw==&#34;&gt;31. 下一个排列&lt;/span&gt; &lt;strong&gt;★★★&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9tYWpvcml0eS1lbGVtZW50L2Rlc2NyaXB0aW9uLw==&#34;&gt;169. 多数元素&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9wcm9kdWN0LW9mLWFycmF5LWV4Y2VwdC1zZWxmL2Rlc2NyaXB0aW9uLw==&#34;&gt;238. 除自身以外数组的乘积&lt;/span&gt; &lt;strong&gt;★&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9maW5kLWFsbC1udW1iZXJzLWRpc2FwcGVhcmVkLWluLWFuLWFycmF5L2Rlc2NyaXB0aW9uLw==&#34;&gt;448. 找到所有数组中消失的数字&lt;/span&gt; &lt;strong&gt;★&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;八、二分查找（共5题，含1道hard题）&#34;&gt;&lt;a href=&#34;#八、二分查找（共5题，含1道hard题）&#34; class=&#34;headerlink&#34; title=&#34;八、二分查找（共5题，含1道hard题）&#34;&gt;&lt;/a&gt;八、二分查找（共5题，含1道hard题）&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9tZWRpYW4tb2YtdHdvLXNvcnRlZC1hcnJheXMvZGVzY3JpcHRpb24v&#34;&gt;4. 寻找两个正序数组的中位数&lt;/span&gt; （hard题）&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9zZWFyY2gtaW4tcm90YXRlZC1zb3J0ZWQtYXJyYXkvZGVzY3JpcHRpb24v&#34;&gt;33. 搜索旋转排序数组&lt;/span&gt; &lt;strong&gt;★&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9maW5kLWZpcnN0LWFuZC1sYXN0LXBvc2l0aW9uLW9mLWVsZW1lbnQtaW4tc29ydGVkLWFycmF5L2Rlc2NyaXB0aW9uLw==&#34;&gt;34. 在排序数组中查找元素的第一个和最后一个位置&lt;/span&gt; &lt;strong&gt;★★&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9zZWFyY2gtYS0yZC1tYXRyaXgtaWkvZGVzY3JpcHRpb24vP2Zhdm9yaXRlPTJja3Rrdmo=&#34;&gt;240. 搜索二维矩阵 II&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9maW5kLXRoZS1kdXBsaWNhdGUtbnVtYmVyL2Rlc2NyaXB0aW9uLw==&#34;&gt;287. 寻找重复数&lt;/span&gt; &lt;strong&gt;★★&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;新版 hot100 题目扩充（以下题目列表不断更新ing~）：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9zZWFyY2gtaW5zZXJ0LXBvc2l0aW9uL2Rlc2NyaXB0aW9uLw==&#34;&gt;LeetCode 35. 搜索插入位置&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;九、双指针-三指针（共3题）&#34;&gt;&lt;a href=&#34;#九、双指针-三指针（共3题）&#34; class=&#34;headerlink&#34; title=&#34;九、双指针&amp;#x2F;三指针（共3题）&#34;&gt;&lt;/a&gt;九、双指针&amp;#x2F;三指针（共3题）&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9jb250YWluZXItd2l0aC1tb3N0LXdhdGVyL2Rlc2NyaXB0aW9uLw==&#34;&gt;11. 盛最多水的容器&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9zb3J0LWNvbG9ycy9kZXNjcmlwdGlvbi8=&#34;&gt;75. 颜色分类&lt;/span&gt; &lt;strong&gt;★★&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9tb3ZlLXplcm9lcy9kZXNjcmlwdGlvbi8=&#34;&gt;283. 移动零&lt;/span&gt; &lt;strong&gt;★&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;十、栈-单调栈（共6题，含2道hard题）&#34;&gt;&lt;a href=&#34;#十、栈-单调栈（共6题，含2道hard题）&#34; class=&#34;headerlink&#34; title=&#34;十、栈&amp;#x2F;单调栈（共6题，含2道hard题）&#34;&gt;&lt;/a&gt;十、栈&amp;#x2F;单调栈（共6题，含2道hard题）&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy92YWxpZC1wYXJlbnRoZXNlcy9kZXNjcmlwdGlvbi8=&#34;&gt;20. 有效的括号&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;del&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy90cmFwcGluZy1yYWluLXdhdGVyLz9mYXZvcml0ZT0yY2t0a3Zq&#34;&gt;42. 接雨水&lt;/span&gt;&lt;/del&gt; （hard题，暂时跳过）&lt;/li&gt;
&lt;li&gt;&lt;del&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9sYXJnZXN0LXJlY3RhbmdsZS1pbi1oaXN0b2dyYW0vP2Zhdm9yaXRlPTJja3Rrdmo=&#34;&gt;84. 柱状图中最大的矩形&lt;/span&gt;&lt;/del&gt; （hard题，暂时跳过）&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9taW4tc3RhY2svZGVzY3JpcHRpb24v&#34;&gt;155. 最小栈&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9kZWNvZGUtc3RyaW5nL2Rlc2NyaXB0aW9uLw==&#34;&gt;394. 字符串解码&lt;/span&gt; &lt;strong&gt;★★&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9kYWlseS10ZW1wZXJhdHVyZXMvZGVzY3JpcHRpb24v&#34;&gt;739. 每日温度&lt;/span&gt; &lt;strong&gt;★&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;十一、排序（共4题）&#34;&gt;&lt;a href=&#34;#十一、排序（共4题）&#34; class=&#34;headerlink&#34; title=&#34;十一、排序（共4题）&#34;&gt;&lt;/a&gt;十一、排序（共4题）&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9tZXJnZS1pbnRlcnZhbHMvZGVzY3JpcHRpb24vP2Zhdm9yaXRlPTJja3Rrdmo=&#34;&gt;56. 合并区间&lt;/span&gt; &lt;strong&gt;★&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9rdGgtbGFyZ2VzdC1lbGVtZW50LWluLWFuLWFycmF5L2Rlc2NyaXB0aW9uLw==&#34;&gt;215. 数组中的第K个最大元素&lt;/span&gt; &lt;strong&gt;★★★&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy90b3Atay1mcmVxdWVudC1lbGVtZW50cy9kZXNjcmlwdGlvbi8=&#34;&gt;347. 前 K 个高频元素&lt;/span&gt; &lt;strong&gt;★&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;del&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9zaG9ydGVzdC11bnNvcnRlZC1jb250aW51b3VzLXN1YmFycmF5L2Rlc2NyaXB0aW9uLz9mYXZvcml0ZT0yY2t0a3Zq&#34;&gt;581. 最短无序连续子数组&lt;/span&gt;&lt;/del&gt;（middle题，暂时跳过）&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;十二、前缀和（共1题）&#34;&gt;&lt;a href=&#34;#十二、前缀和（共1题）&#34; class=&#34;headerlink&#34; title=&#34;十二、前缀和（共1题）&#34;&gt;&lt;/a&gt;十二、前缀和（共1题）&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9zdWJhcnJheS1zdW0tZXF1YWxzLWsvZGVzY3JpcHRpb24v&#34;&gt;560. 和为 K 的子数组&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;十三、字典树-前缀树（共1题）&#34;&gt;&lt;a href=&#34;#十三、字典树-前缀树（共1题）&#34; class=&#34;headerlink&#34; title=&#34;十三、字典树&amp;#x2F;前缀树（共1题）&#34;&gt;&lt;/a&gt;十三、字典树&amp;#x2F;前缀树（共1题）&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9pbXBsZW1lbnQtdHJpZS1wcmVmaXgtdHJlZS9kZXNjcmlwdGlvbi8=&#34;&gt;208. 实现 Trie (前缀树)&lt;/span&gt; &lt;strong&gt;★★★&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;十四、LRU缓存（共1题）&#34;&gt;&lt;a href=&#34;#十四、LRU缓存（共1题）&#34; class=&#34;headerlink&#34; title=&#34;十四、LRU缓存（共1题）&#34;&gt;&lt;/a&gt;十四、LRU缓存（共1题）&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9scnUtY2FjaGUvP2Zhdm9yaXRlPTJja3Rrdmo=&#34;&gt;146. LRU 缓存&lt;/span&gt; &lt;strong&gt;★★★&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;十五、动态规划（共23题，含6道hard题）&#34;&gt;&lt;a href=&#34;#十五、动态规划（共23题，含6道hard题）&#34; class=&#34;headerlink&#34; title=&#34;十五、动态规划（共23题，含6道hard题）&#34;&gt;&lt;/a&gt;十五、动态规划（共23题，含6道hard题）&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;del&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9yZWd1bGFyLWV4cHJlc3Npb24tbWF0Y2hpbmcvZGVzY3JpcHRpb24vP2Zhdm9yaXRlPTJja3Rrdmo=&#34;&gt;10. 正则表达式匹配&lt;/span&gt;&lt;/del&gt;（hard题，暂时跳过）&lt;/li&gt;
&lt;li&gt;&lt;del&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9sb25nZXN0LXZhbGlkLXBhcmVudGhlc2VzL2Rlc2NyaXB0aW9uLz9mYXZvcml0ZT0yY2t0a3Zq&#34;&gt;32. 最长有效括号&lt;/span&gt;&lt;/del&gt;（hard题，暂时跳过）&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9tYXhpbXVtLXN1YmFycmF5L2Rlc2NyaXB0aW9uLw==&#34;&gt;53. 最大子数组和&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy91bmlxdWUtcGF0aHMvZGVzY3JpcHRpb24v&#34;&gt;62. 不同路径&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9taW5pbXVtLXBhdGgtc3VtLz9mYXZvcml0ZT0yY2t0a3Zq&#34;&gt;64. 最小路径和&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9jbGltYmluZy1zdGFpcnMvZGVzY3JpcHRpb24v&#34;&gt;70. 爬楼梯&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;del&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9lZGl0LWRpc3RhbmNlLz9mYXZvcml0ZT0yY2t0a3Zq&#34;&gt;72. 编辑距离&lt;/span&gt;&lt;/del&gt;（hard题，暂时跳过）&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy91bmlxdWUtYmluYXJ5LXNlYXJjaC10cmVlcy9kZXNjcmlwdGlvbi8=&#34;&gt;96. 不同的二叉搜索树&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9iZXN0LXRpbWUtdG8tYnV5LWFuZC1zZWxsLXN0b2NrL2Rlc2NyaXB0aW9uLw==&#34;&gt;121. 买卖股票的最佳时机&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy93b3JkLWJyZWFrLz9mYXZvcml0ZT0yY2t0a3Zq&#34;&gt;139. 单词拆分&lt;/span&gt; &lt;strong&gt;★&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;del&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9tYXhpbXVtLXByb2R1Y3Qtc3ViYXJyYXkvZGVzY3JpcHRpb24vP2Zhdm9yaXRlPTJja3Rrdmo=&#34;&gt;152. 乘积最大子数组&lt;/span&gt;&lt;/del&gt;（middle题，暂时跳过）&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9ob3VzZS1yb2JiZXIvZGVzY3JpcHRpb24v&#34;&gt;198. 打家劫舍&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;del&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9ob3VzZS1yb2JiZXItaWlpL2Rlc2NyaXB0aW9uLz9mYXZvcml0ZT0yY2t0a3Zq&#34;&gt;337. 打家劫舍 III&lt;/span&gt;&lt;/del&gt;（middle题，暂时跳过）&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9tYXhpbWFsLXNxdWFyZS9kZXNjcmlwdGlvbi8=&#34;&gt;221. 最大正方形&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9wZXJmZWN0LXNxdWFyZXMvZGVzY3JpcHRpb24v&#34;&gt;279. 完全平方数&lt;/span&gt; &lt;strong&gt;★&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9sb25nZXN0LWluY3JlYXNpbmctc3Vic2VxdWVuY2UvZGVzY3JpcHRpb24v&#34;&gt;300. 最长递增子序列&lt;/span&gt; &lt;strong&gt;★&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9iZXN0LXRpbWUtdG8tYnV5LWFuZC1zZWxsLXN0b2NrLXdpdGgtY29vbGRvd24vP2Zhdm9yaXRlPTJja3Rrdmo=&#34;&gt;309. 最佳买卖股票时机含冷冻期&lt;/span&gt; &lt;strong&gt;★★★&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;del&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9idXJzdC1iYWxsb29ucy8/ZmF2b3JpdGU9MmNrdGt2ag==&#34;&gt;312. 戳气球&lt;/span&gt;&lt;/del&gt;（hard题，暂时跳过）&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9jb2luLWNoYW5nZS9kZXNjcmlwdGlvbi8=&#34;&gt;322. 零钱兑换&lt;/span&gt; &lt;strong&gt;★&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;del&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9wYXJ0aXRpb24tZXF1YWwtc3Vic2V0LXN1bS8/ZmF2b3JpdGU9MmNrdGt2ag==&#34;&gt;416. 分割等和子集&lt;/span&gt;&lt;/del&gt;（middle题，暂时跳过）&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy90YXJnZXQtc3VtL2Rlc2NyaXB0aW9uLw==&#34;&gt;494. 目标和&lt;/span&gt; &lt;strong&gt;★&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9wYWxpbmRyb21pYy1zdWJzdHJpbmdzL2Rlc2NyaXB0aW9uLz9mYXZvcml0ZT0yY2t0a3Zq&#34;&gt;647. 回文子串&lt;/span&gt; &lt;strong&gt;★★&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9sb25nZXN0LXBhbGluZHJvbWljLXN1YnN0cmluZy9kZXNjcmlwdGlvbi8=&#34;&gt;5. 最长回文子串&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;十六、滑动窗口（共4题，含2道hard题）&#34;&gt;&lt;a href=&#34;#十六、滑动窗口（共4题，含2道hard题）&#34; class=&#34;headerlink&#34; title=&#34;十六、滑动窗口（共4题，含2道hard题）&#34;&gt;&lt;/a&gt;十六、滑动窗口（共4题，含2道hard题）&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9sb25nZXN0LXN1YnN0cmluZy13aXRob3V0LXJlcGVhdGluZy1jaGFyYWN0ZXJzL2Rlc2NyaXB0aW9uLw==&#34;&gt;3. 无重复字符的最长子串&lt;/span&gt; &lt;strong&gt;★★★&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;del&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9taW5pbXVtLXdpbmRvdy1zdWJzdHJpbmcvZGVzY3JpcHRpb24vP2Zhdm9yaXRlPTJja3Rrdmo=&#34;&gt;76. 最小覆盖子串&lt;/span&gt;&lt;/del&gt;（hard题，暂时跳过）&lt;/li&gt;
&lt;li&gt;&lt;del&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9zbGlkaW5nLXdpbmRvdy1tYXhpbXVtLz9mYXZvcml0ZT0yY2t0a3Zq&#34;&gt;239. 滑动窗口最大值&lt;/span&gt;&lt;/del&gt;（hard题，暂时跳过）&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9maW5kLWFsbC1hbmFncmFtcy1pbi1hLXN0cmluZy9kZXNjcmlwdGlvbi8/ZmF2b3JpdGU9MmNrdGt2ag==&#34;&gt;438. 找到字符串中所有字母异位词&lt;/span&gt; &lt;strong&gt;★&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;十七、贪心（共1题）&#34;&gt;&lt;a href=&#34;#十七、贪心（共1题）&#34; class=&#34;headerlink&#34; title=&#34;十七、贪心（共1题）&#34;&gt;&lt;/a&gt;十七、贪心（共1题）&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9qdW1wLWdhbWUvZGVzY3JpcHRpb24v&#34;&gt;55. 跳跃游戏&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;十八、数学（共1题）&#34;&gt;&lt;a href=&#34;#十八、数学（共1题）&#34; class=&#34;headerlink&#34; title=&#34;十八、数学（共1题）&#34;&gt;&lt;/a&gt;十八、数学（共1题）&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9yb3RhdGUtaW1hZ2Uvc29sdXRpb25zLz9mYXZvcml0ZT0yY2t0a3Zq&#34;&gt;48. 旋转图像&lt;/span&gt; &lt;strong&gt;★&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;十九、其它（共2题，含1道力扣VIP专属题）&#34;&gt;&lt;a href=&#34;#十九、其它（共2题，含1道力扣VIP专属题）&#34; class=&#34;headerlink&#34; title=&#34;十九、其它（共2题，含1道力扣VIP专属题）&#34;&gt;&lt;/a&gt;十九、其它（共2题，含1道力扣VIP专属题）&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;del&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9tZWV0aW5nLXJvb21zLWlpLz9mYXZvcml0ZT0yY2t0a3Zq&#34;&gt;253. 会议室 II&lt;/span&gt;&lt;/del&gt;（力扣VIP专属题，暂时跳过）&lt;/li&gt;
&lt;li&gt;&lt;del&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy90YXNrLXNjaGVkdWxlci9zb2x1dGlvbnMvP2Zhdm9yaXRlPTJja3Rrdmo=&#34;&gt;621. 任务调度器&lt;/span&gt;&lt;/del&gt;（middle题，暂时跳过）&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;以下middle题目我暂时跳过了，后面有精力再研究：&#34;&gt;&lt;a href=&#34;#以下middle题目我暂时跳过了，后面有精力再研究：&#34; class=&#34;headerlink&#34; title=&#34;以下middle题目我暂时跳过了，后面有精力再研究：&#34;&gt;&lt;/a&gt;以下middle题目我暂时跳过了，后面有精力再研究：&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;ol start=&#34;406&#34;&gt;
&lt;li&gt;根据身高重建队列&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;ol start=&#34;152&#34;&gt;
&lt;li&gt;乘积最大子数组&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;ol start=&#34;416&#34;&gt;
&lt;li&gt;分割等和子集&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;ol start=&#34;337&#34;&gt;
&lt;li&gt;打家劫舍 III&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;ol start=&#34;581&#34;&gt;
&lt;li&gt;最短无序连续子数组&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;ol start=&#34;253&#34;&gt;
&lt;li&gt;会议室 II&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;ol start=&#34;621&#34;&gt;
&lt;li&gt;任务调度器&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;常见高频题：&#34;&gt;&lt;a href=&#34;#常见高频题：&#34; class=&#34;headerlink&#34; title=&#34;常见高频题：&#34;&gt;&lt;/a&gt;常见高频题：&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9tZXJnZS1zb3J0ZWQtYXJyYXkvZGVzY3JpcHRpb24v&#34;&gt;88. 合并两个有序数组&lt;/span&gt;，倒序双指针，类似于 &lt;a href=&#34;#21-%E5%90%88%E5%B9%B6%E4%B8%A4%E4%B8%AA%E6%9C%89%E5%BA%8F%E9%93%BE%E8%A1%A8&#34;&gt;21. 合并两个有序链表&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9jb21wcmVzcy1zdHJpbmctbGNjaS9kZXNjcmlwdGlvbi8=&#34;&gt;面试题 01.06. 字符串压缩&lt;/span&gt;，类似于 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9zdHJpbmctY29tcHJlc3Npb24vZGVzY3JpcHRpb24v&#34;&gt;443. 压缩字符串&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;版权声明：&lt;/strong&gt; 本文为博主原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接和本声明。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;原文链接：&lt;/strong&gt; &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM3MTAyOTg0L2FydGljbGUvZGV0YWlscy8xMjg1NzYyODM=&#34;&gt;https://blog.csdn.net/qq_37102984/article/details/128576283&lt;/span&gt; &lt;/p&gt;
 ]]></description>
        </item>
    </channel>
</rss>
